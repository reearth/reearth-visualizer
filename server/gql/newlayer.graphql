# TODO: Make LayerGroup Real
interface NLSLayer {
  id: ID!
  index: Int
  layerType: String!
  sceneId: ID!
  config: JSON
  title: String!
  visible: Boolean!
  infobox: NLSInfobox
  isSketch: Boolean!
  sketch: SketchInfo
}

type NLSLayerSimple implements NLSLayer {
  id: ID!
  index: Int
  layerType: String!
  sceneId: ID!
  config: JSON
  title: String!
  visible: Boolean!
  infobox: NLSInfobox
  scene: Scene
  isSketch: Boolean!
  sketch: SketchInfo
}

type NLSLayerGroup implements NLSLayer {
  id: ID!
  index: Int
  layerType: String!
  sceneId: ID!
  children: [NLSLayer]!
  childrenIds: [ID!]!
  config: JSON
  title: String!
  visible: Boolean!
  infobox: NLSInfobox
  scene: Scene
  isSketch: Boolean!
  sketch: SketchInfo
}

type NLSInfobox {
  id: ID!
  sceneId: ID!
  layerId: ID!
  propertyId: ID!
  blocks: [InfoboxBlock!]!
  property: Property
  scene: Scene
}

type InfoboxBlock {
  id: ID!
  sceneId: ID!
  layerId: ID!
  propertyId: ID!
  property: Property
  pluginId: ID!
  plugin: Plugin
  extensionId: ID!
  extension: PluginExtension
  scene: Scene
}

type SketchInfo {
  customPropertySchema: JSON
  featureCollection: FeatureCollection
}

# InputType

input AddNLSLayerSimpleInput {
  layerType: String!
  title: String!
  sceneId: ID!
  config: JSON
  index: Int
  visible: Boolean
  schema: JSON
}

input RemoveNLSLayerInput {
  layerId: ID!
}

input UpdateNLSLayerInput {
  index: Int
  layerId: ID!
  name: String
  visible: Boolean
  config: JSON
}

input UpdateNLSLayersInput {
  layers: [UpdateNLSLayerInput!]!
}

input CreateNLSInfoboxInput {
  layerId: ID!
}

input RemoveNLSInfoboxInput {
  layerId: ID!
}

input AddNLSInfoboxBlockInput {
  layerId: ID!
  pluginId: ID!
  extensionId: ID!
  index: Int
}

input MoveNLSInfoboxBlockInput {
  layerId: ID!
  infoboxBlockId: ID!
  index: Int!
}

input RemoveNLSInfoboxBlockInput {
  layerId: ID!
  infoboxBlockId: ID!
}

input DuplicateNLSLayerInput {
  layerId: ID!
}

input AddCustomPropertySchemaInput {
  layerId: ID!
  schema: JSON
}

input UpdateCustomPropertySchemaInput {
  layerId: ID!
  schema: JSON
}

# Payload

type AddNLSLayerSimplePayload {
  layers: NLSLayerSimple!
}

type RemoveNLSLayerPayload {
  layerId: ID!
}

type UpdateNLSLayerPayload {
  layer: NLSLayer!
}

type UpdateNLSLayersPayload {
  layers: [NLSLayer!]!
}

type CreateNLSInfoboxPayload {
  layer: NLSLayer!
}

type RemoveNLSInfoboxPayload {
  layer: NLSLayer!
}

type AddNLSInfoboxBlockPayload {
  infoboxBlock: InfoboxBlock!
  layer: NLSLayer!
}

type MoveNLSInfoboxBlockPayload {
  infoboxBlockId: ID!
  layer: NLSLayer!
  index: Int!
}

type RemoveNLSInfoboxBlockPayload {
  infoboxBlockId: ID!
  layer: NLSLayer!
}

type DuplicateNLSLayerPayload {
  layer: NLSLayer!
}

extend type Mutation {
  addNLSLayerSimple(input: AddNLSLayerSimpleInput!): AddNLSLayerSimplePayload!
  removeNLSLayer(input: RemoveNLSLayerInput!): RemoveNLSLayerPayload!
  updateNLSLayer(input: UpdateNLSLayerInput!): UpdateNLSLayerPayload!
  updateNLSLayers(input: UpdateNLSLayersInput!): UpdateNLSLayersPayload!
  createNLSInfobox(input: CreateNLSInfoboxInput!): CreateNLSInfoboxPayload
  removeNLSInfobox(input: RemoveNLSInfoboxInput!): RemoveNLSInfoboxPayload
  addNLSInfoboxBlock(input: AddNLSInfoboxBlockInput!): AddNLSInfoboxBlockPayload
  moveNLSInfoboxBlock(
    input: MoveNLSInfoboxBlockInput!
  ): MoveNLSInfoboxBlockPayload
  removeNLSInfoboxBlock(
    input: RemoveNLSInfoboxBlockInput!
  ): RemoveNLSInfoboxBlockPayload
  duplicateNLSLayer(input: DuplicateNLSLayerInput!): DuplicateNLSLayerPayload!
  addCustomProperties(
    input: AddCustomPropertySchemaInput!
  ): UpdateNLSLayerPayload!
  updateCustomProperties(
    input: UpdateCustomPropertySchemaInput!
  ): UpdateNLSLayerPayload!
}
