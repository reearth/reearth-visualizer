interface Layer {
  id: ID!
  sceneId: ID!
  name: String!
  isVisible: Boolean!
  propertyId: ID
  pluginId: ID
  extensionId: ID
  infobox: Infobox
  # parentId will not be always set
  parentId: ID
  parent: LayerGroup
  property: Property
  plugin: Plugin
  extension: PluginExtension
  scenePlugin: ScenePlugin
}

enum LayerEncodingFormat {
  KML
  CZML
  GEOJSON
  SHAPE
  REEARTH
}

type LayerItem implements Layer {
  id: ID!
  sceneId: ID!
  name: String!
  isVisible: Boolean!
  propertyId: ID
  pluginId: ID
  extensionId: ID
  infobox: Infobox
  # parentId will not be always set
  parentId: ID
  linkedDatasetId: ID
  parent: LayerGroup
  property: Property
  plugin: Plugin
  extension: PluginExtension
  merged: MergedLayer
  scene: Scene
  scenePlugin: ScenePlugin
}

type LayerGroup implements Layer {
  id: ID!
  sceneId: ID!
  name: String!
  isVisible: Boolean!
  propertyId: ID
  pluginId: ID
  extensionId: ID
  infobox: Infobox
  # parentId will not be always set
  parentId: ID
  linkedDatasetSchemaId: ID
  root: Boolean!
  layerIds: [ID!]!
  parent: LayerGroup
  property: Property
  plugin: Plugin
  extension: PluginExtension
  layers: [Layer]!
  scene: Scene
  scenePlugin: ScenePlugin
}

type Infobox {
  sceneId: ID!
  layerId: ID!
  propertyId: ID!
  fields: [InfoboxField!]!
  linkedDatasetId: ID
  layer: Layer!
  property: Property
  merged: MergedInfobox
  scene: Scene
}

type InfoboxField {
  id: ID!
  sceneId: ID!
  layerId: ID!
  propertyId: ID!
  pluginId: ID!
  extensionId: ID!
  linkedDatasetId: ID
  layer: Layer!
  infobox: Infobox!
  property: Property
  plugin: Plugin
  extension: PluginExtension
  merged: MergedInfoboxField
  scene: Scene
  scenePlugin: ScenePlugin
}

type MergedLayer {
  originalId: ID!
  parentId: ID
  sceneID: ID!
  property: MergedProperty
  infobox: MergedInfobox
  original: LayerItem
  parent: LayerGroup
  scene: Scene
}

type MergedInfobox {
  sceneID: ID!
  property: MergedProperty
  fields: [MergedInfoboxField!]!
  scene: Scene
}

type MergedInfoboxField {
  originalId: ID!
  sceneID: ID!
  pluginId: ID!
  extensionId: ID!
  property: MergedProperty
  plugin: Plugin
  extension: PluginExtension
  scene: Scene
  scenePlugin: ScenePlugin
}
