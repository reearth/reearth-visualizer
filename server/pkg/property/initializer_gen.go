// Code generated by deep-copy --type Initializer --pointer-receiver -o initializer_gen.go .; DO NOT EDIT.

package property

// DeepCopy generates a deep copy of *Initializer
func (o *Initializer) DeepCopy() *Initializer {
	var cp Initializer = *o
	if o.ID != nil {
		cp.ID = new(ID)
		*cp.ID = *o.ID
	}
	if o.Items != nil {
		cp.Items = make([]*InitializerItem, len(o.Items))
		copy(cp.Items, o.Items)
		for i2 := range o.Items {
			if o.Items[i2] != nil {
				cp.Items[i2] = new(InitializerItem)
				*cp.Items[i2] = *o.Items[i2]
				if o.Items[i2].ID != nil {
					cp.Items[i2].ID = new(ItemID)
					*cp.Items[i2].ID = *o.Items[i2].ID
				}
				if o.Items[i2].Groups != nil {
					cp.Items[i2].Groups = make([]*InitializerGroup, len(o.Items[i2].Groups))
					copy(cp.Items[i2].Groups, o.Items[i2].Groups)
					for i5 := range o.Items[i2].Groups {
						if o.Items[i2].Groups[i5] != nil {
							cp.Items[i2].Groups[i5] = new(InitializerGroup)
							*cp.Items[i2].Groups[i5] = *o.Items[i2].Groups[i5]
							if o.Items[i2].Groups[i5].ID != nil {
								cp.Items[i2].Groups[i5].ID = new(ItemID)
								*cp.Items[i2].Groups[i5].ID = *o.Items[i2].Groups[i5].ID
							}
							if o.Items[i2].Groups[i5].Fields != nil {
								cp.Items[i2].Groups[i5].Fields = make([]*InitializerField, len(o.Items[i2].Groups[i5].Fields))
								copy(cp.Items[i2].Groups[i5].Fields, o.Items[i2].Groups[i5].Fields)
								for i8 := range o.Items[i2].Groups[i5].Fields {
									if o.Items[i2].Groups[i5].Fields[i8] != nil {
										cp.Items[i2].Groups[i5].Fields[i8] = new(InitializerField)
										*cp.Items[i2].Groups[i5].Fields[i8] = *o.Items[i2].Groups[i5].Fields[i8]
										if o.Items[i2].Groups[i5].Fields[i8].Value != nil {
											cp.Items[i2].Groups[i5].Fields[i8].Value = new(Value)
											*cp.Items[i2].Groups[i5].Fields[i8].Value = *o.Items[i2].Groups[i5].Fields[i8].Value
										}
										if o.Items[i2].Groups[i5].Fields[i8].Links != nil {
											cp.Items[i2].Groups[i5].Fields[i8].Links = make([]*InitializerLink, len(o.Items[i2].Groups[i5].Fields[i8].Links))
											copy(cp.Items[i2].Groups[i5].Fields[i8].Links, o.Items[i2].Groups[i5].Fields[i8].Links)
											for i11 := range o.Items[i2].Groups[i5].Fields[i8].Links {
												if o.Items[i2].Groups[i5].Fields[i8].Links[i11] != nil {
													cp.Items[i2].Groups[i5].Fields[i8].Links[i11] = new(InitializerLink)
													*cp.Items[i2].Groups[i5].Fields[i8].Links[i11] = *o.Items[i2].Groups[i5].Fields[i8].Links[i11]
													if o.Items[i2].Groups[i5].Fields[i8].Links[i11].Dataset != nil {
														cp.Items[i2].Groups[i5].Fields[i8].Links[i11].Dataset = new(DatasetID)
														*cp.Items[i2].Groups[i5].Fields[i8].Links[i11].Dataset = *o.Items[i2].Groups[i5].Fields[i8].Links[i11].Dataset
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if o.Items[i2].Fields != nil {
					cp.Items[i2].Fields = make([]*InitializerField, len(o.Items[i2].Fields))
					copy(cp.Items[i2].Fields, o.Items[i2].Fields)
					for i5 := range o.Items[i2].Fields {
						if o.Items[i2].Fields[i5] != nil {
							cp.Items[i2].Fields[i5] = new(InitializerField)
							*cp.Items[i2].Fields[i5] = *o.Items[i2].Fields[i5]
							if o.Items[i2].Fields[i5].Value != nil {
								cp.Items[i2].Fields[i5].Value = new(Value)
								*cp.Items[i2].Fields[i5].Value = *o.Items[i2].Fields[i5].Value
							}
							if o.Items[i2].Fields[i5].Links != nil {
								cp.Items[i2].Fields[i5].Links = make([]*InitializerLink, len(o.Items[i2].Fields[i5].Links))
								copy(cp.Items[i2].Fields[i5].Links, o.Items[i2].Fields[i5].Links)
								for i8 := range o.Items[i2].Fields[i5].Links {
									if o.Items[i2].Fields[i5].Links[i8] != nil {
										cp.Items[i2].Fields[i5].Links[i8] = new(InitializerLink)
										*cp.Items[i2].Fields[i5].Links[i8] = *o.Items[i2].Fields[i5].Links[i8]
										if o.Items[i2].Fields[i5].Links[i8].Dataset != nil {
											cp.Items[i2].Fields[i5].Links[i8].Dataset = new(DatasetID)
											*cp.Items[i2].Fields[i5].Links[i8].Dataset = *o.Items[i2].Fields[i5].Links[i8].Dataset
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	return &cp
}
