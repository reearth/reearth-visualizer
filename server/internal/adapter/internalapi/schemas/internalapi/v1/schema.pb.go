// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: schemas/internalapi/v1/schema.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Visualizer int32

const (
	Visualizer_VISUALIZER_UNSPECIFIED Visualizer = 0
	Visualizer_VISUALIZER_CESIUM      Visualizer = 1
	Visualizer_VISUALIZER_CESIUM_BETA Visualizer = 2
)

// Enum value maps for Visualizer.
var (
	Visualizer_name = map[int32]string{
		0: "VISUALIZER_UNSPECIFIED",
		1: "VISUALIZER_CESIUM",
		2: "VISUALIZER_CESIUM_BETA",
	}
	Visualizer_value = map[string]int32{
		"VISUALIZER_UNSPECIFIED": 0,
		"VISUALIZER_CESIUM":      1,
		"VISUALIZER_CESIUM_BETA": 2,
	}
)

func (x Visualizer) Enum() *Visualizer {
	p := new(Visualizer)
	*p = x
	return p
}

func (x Visualizer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Visualizer) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_internalapi_v1_schema_proto_enumTypes[0].Descriptor()
}

func (Visualizer) Type() protoreflect.EnumType {
	return &file_schemas_internalapi_v1_schema_proto_enumTypes[0]
}

func (x Visualizer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Visualizer.Descriptor instead.
func (Visualizer) EnumDescriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{0}
}

type ProjectImportStatus int32

const (
	ProjectImportStatus_NONE       ProjectImportStatus = 0
	ProjectImportStatus_PROCESSING ProjectImportStatus = 1
	ProjectImportStatus_FAIL       ProjectImportStatus = 2
	ProjectImportStatus_SUCCESS    ProjectImportStatus = 3
)

// Enum value maps for ProjectImportStatus.
var (
	ProjectImportStatus_name = map[int32]string{
		0: "NONE",
		1: "PROCESSING",
		2: "FAIL",
		3: "SUCCESS",
	}
	ProjectImportStatus_value = map[string]int32{
		"NONE":       0,
		"PROCESSING": 1,
		"FAIL":       2,
		"SUCCESS":    3,
	}
)

func (x ProjectImportStatus) Enum() *ProjectImportStatus {
	p := new(ProjectImportStatus)
	*p = x
	return p
}

func (x ProjectImportStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectImportStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_internalapi_v1_schema_proto_enumTypes[1].Descriptor()
}

func (ProjectImportStatus) Type() protoreflect.EnumType {
	return &file_schemas_internalapi_v1_schema_proto_enumTypes[1]
}

func (x ProjectImportStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectImportStatus.Descriptor instead.
func (ProjectImportStatus) EnumDescriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{1}
}

type PublishmentStatus int32

const (
	PublishmentStatus_PUBLISHMENT_STATUS_UNSPECIFIED PublishmentStatus = 0
	// The project is published and publicly accessible.
	PublishmentStatus_PUBLISHMENT_STATUS_PUBLIC PublishmentStatus = 1
	// The project is published with limited access.
	PublishmentStatus_PUBLISHMENT_STATUS_LIMITED PublishmentStatus = 2
	// The project is unpublished (web files have been deleted).
	PublishmentStatus_PUBLISHMENT_STATUS_PRIVATE PublishmentStatus = 3
)

// Enum value maps for PublishmentStatus.
var (
	PublishmentStatus_name = map[int32]string{
		0: "PUBLISHMENT_STATUS_UNSPECIFIED",
		1: "PUBLISHMENT_STATUS_PUBLIC",
		2: "PUBLISHMENT_STATUS_LIMITED",
		3: "PUBLISHMENT_STATUS_PRIVATE",
	}
	PublishmentStatus_value = map[string]int32{
		"PUBLISHMENT_STATUS_UNSPECIFIED": 0,
		"PUBLISHMENT_STATUS_PUBLIC":      1,
		"PUBLISHMENT_STATUS_LIMITED":     2,
		"PUBLISHMENT_STATUS_PRIVATE":     3,
	}
)

func (x PublishmentStatus) Enum() *PublishmentStatus {
	p := new(PublishmentStatus)
	*p = x
	return p
}

func (x PublishmentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublishmentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_internalapi_v1_schema_proto_enumTypes[2].Descriptor()
}

func (PublishmentStatus) Type() protoreflect.EnumType {
	return &file_schemas_internalapi_v1_schema_proto_enumTypes[2]
}

func (x PublishmentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublishmentStatus.Descriptor instead.
func (PublishmentStatus) EnumDescriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{2}
}

type ProjectSortField int32

const (
	ProjectSortField_PROJECT_SORT_FIELD_UNSPECIFIED ProjectSortField = 0
	ProjectSortField_UPDATEDAT                      ProjectSortField = 1
	ProjectSortField_NAME                           ProjectSortField = 2
	ProjectSortField_STARCOUNT                      ProjectSortField = 3
)

// Enum value maps for ProjectSortField.
var (
	ProjectSortField_name = map[int32]string{
		0: "PROJECT_SORT_FIELD_UNSPECIFIED",
		1: "UPDATEDAT",
		2: "NAME",
		3: "STARCOUNT",
	}
	ProjectSortField_value = map[string]int32{
		"PROJECT_SORT_FIELD_UNSPECIFIED": 0,
		"UPDATEDAT":                      1,
		"NAME":                           2,
		"STARCOUNT":                      3,
	}
)

func (x ProjectSortField) Enum() *ProjectSortField {
	p := new(ProjectSortField)
	*p = x
	return p
}

func (x ProjectSortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectSortField) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_internalapi_v1_schema_proto_enumTypes[3].Descriptor()
}

func (ProjectSortField) Type() protoreflect.EnumType {
	return &file_schemas_internalapi_v1_schema_proto_enumTypes[3]
}

func (x ProjectSortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectSortField.Descriptor instead.
func (ProjectSortField) EnumDescriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{3}
}

type SortDirection int32

const (
	SortDirection_SORT_DIRECTION_UNSPECIFIED SortDirection = 0
	SortDirection_ASC                        SortDirection = 1
	SortDirection_DESC                       SortDirection = 2
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "SORT_DIRECTION_UNSPECIFIED",
		1: "ASC",
		2: "DESC",
	}
	SortDirection_value = map[string]int32{
		"SORT_DIRECTION_UNSPECIFIED": 0,
		"ASC":                        1,
		"DESC":                       2,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_internalapi_v1_schema_proto_enumTypes[4].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_schemas_internalapi_v1_schema_proto_enumTypes[4]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{4}
}

// Defines which field to search in when using keyword search
type SearchFieldType int32

const (
	SearchFieldType_SEARCH_FIELD_TYPE_NAME   SearchFieldType = 0 // Default search in project name
	SearchFieldType_SEARCH_FIELD_TYPE_TOPICS SearchFieldType = 1 // Search in project topics
)

// Enum value maps for SearchFieldType.
var (
	SearchFieldType_name = map[int32]string{
		0: "SEARCH_FIELD_TYPE_NAME",
		1: "SEARCH_FIELD_TYPE_TOPICS",
	}
	SearchFieldType_value = map[string]int32{
		"SEARCH_FIELD_TYPE_NAME":   0,
		"SEARCH_FIELD_TYPE_TOPICS": 1,
	}
)

func (x SearchFieldType) Enum() *SearchFieldType {
	p := new(SearchFieldType)
	*p = x
	return p
}

func (x SearchFieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchFieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_internalapi_v1_schema_proto_enumTypes[5].Descriptor()
}

func (SearchFieldType) Type() protoreflect.EnumType {
	return &file_schemas_internalapi_v1_schema_proto_enumTypes[5]
}

func (x SearchFieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchFieldType.Descriptor instead.
func (SearchFieldType) EnumDescriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{5}
}

// Visibility filter for all projects
type ProjectVisibility int32

const (
	ProjectVisibility_PROJECT_VISIBILITY_PUBLIC  ProjectVisibility = 0 // Default visibility (public projects)
	ProjectVisibility_PROJECT_VISIBILITY_PRIVATE ProjectVisibility = 1 // Private projects
)

// Enum value maps for ProjectVisibility.
var (
	ProjectVisibility_name = map[int32]string{
		0: "PROJECT_VISIBILITY_PUBLIC",
		1: "PROJECT_VISIBILITY_PRIVATE",
	}
	ProjectVisibility_value = map[string]int32{
		"PROJECT_VISIBILITY_PUBLIC":  0,
		"PROJECT_VISIBILITY_PRIVATE": 1,
	}
)

func (x ProjectVisibility) Enum() *ProjectVisibility {
	p := new(ProjectVisibility)
	*p = x
	return p
}

func (x ProjectVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_internalapi_v1_schema_proto_enumTypes[6].Descriptor()
}

func (ProjectVisibility) Type() protoreflect.EnumType {
	return &file_schemas_internalapi_v1_schema_proto_enumTypes[6]
}

func (x ProjectVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectVisibility.Descriptor instead.
func (ProjectVisibility) EnumDescriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{6}
}

// Core Project messages
type Project struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Workspace ID
	WorkspaceId string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Scene ID
	SceneId string `protobuf:"bytes,3,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	// Story
	Stories []*Story `protobuf:"bytes,4,rep,name=stories,proto3" json:"stories,omitempty"`
	// Project title
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Project description
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Project image (URL link)
	ImageUrl *string `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	// Type of visualizer (e.g., Cesium)
	Visualizer Visualizer `protobuf:"varint,8,opt,name=visualizer,proto3,enum=reearth.visualizer.v1.Visualizer" json:"visualizer,omitempty"`
	// Creation date
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last updated date
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Currently unused
	IsArchived bool `protobuf:"varint,11,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	// Indicates whether it's a classic or visualizer project type
	CoreSupport bool `protobuf:"varint,12,opt,name=core_support,json=coreSupport,proto3" json:"core_support,omitempty"`
	// Whether the project is marked as a favorite
	Starred bool `protobuf:"varint,13,opt,name=starred,proto3" json:"starred,omitempty"`
	// Whether the project is in the trash
	IsDeleted bool `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// Visibility of the project (e.g., "public", "private")
	Visibility string `protobuf:"bytes,15,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// URL to visualizer project
	EditorUrl string `protobuf:"bytes,16,opt,name=editor_url,json=editorUrl,proto3" json:"editor_url,omitempty"`
	// Project metadata
	Metadata *ProjectMetadata `protobuf:"bytes,17,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	// Project alias
	ProjectAlias string `protobuf:"bytes,18,opt,name=project_alias,json=projectAlias,proto3" json:"project_alias,omitempty"`
	// Scene Publishment value
	Alias string `protobuf:"bytes,19,opt,name=alias,proto3" json:"alias,omitempty"`
	// Scene Publishment value
	PublishmentStatus PublishmentStatus `protobuf:"varint,20,opt,name=publishment_status,json=publishmentStatus,proto3,enum=reearth.visualizer.v1.PublishmentStatus" json:"publishment_status,omitempty"`
	// Scene Publishment value
	PublishedUrl  *string `protobuf:"bytes,21,opt,name=published_url,json=publishedUrl,proto3,oneof" json:"published_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *Project) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *Project) GetStories() []*Story {
	if x != nil {
		return x.Stories
	}
	return nil
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *Project) GetVisualizer() Visualizer {
	if x != nil {
		return x.Visualizer
	}
	return Visualizer_VISUALIZER_UNSPECIFIED
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Project) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *Project) GetCoreSupport() bool {
	if x != nil {
		return x.CoreSupport
	}
	return false
}

func (x *Project) GetStarred() bool {
	if x != nil {
		return x.Starred
	}
	return false
}

func (x *Project) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Project) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *Project) GetEditorUrl() string {
	if x != nil {
		return x.EditorUrl
	}
	return ""
}

func (x *Project) GetMetadata() *ProjectMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Project) GetProjectAlias() string {
	if x != nil {
		return x.ProjectAlias
	}
	return ""
}

func (x *Project) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Project) GetPublishmentStatus() PublishmentStatus {
	if x != nil {
		return x.PublishmentStatus
	}
	return PublishmentStatus_PUBLISHMENT_STATUS_UNSPECIFIED
}

func (x *Project) GetPublishedUrl() string {
	if x != nil && x.PublishedUrl != nil {
		return *x.PublishedUrl
	}
	return ""
}

type Story struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Story ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Story Publishment value
	StoryAlias string `protobuf:"bytes,2,opt,name=story_alias,json=storyAlias,proto3" json:"story_alias,omitempty"`
	// Story Publishment value
	StoryPublishmentStatus PublishmentStatus `protobuf:"varint,3,opt,name=story_publishment_status,json=storyPublishmentStatus,proto3,enum=reearth.visualizer.v1.PublishmentStatus" json:"story_publishment_status,omitempty"`
	// Story Publishment value
	StoryPublishedUrl *string `protobuf:"bytes,4,opt,name=story_published_url,json=storyPublishedUrl,proto3,oneof" json:"story_published_url,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Story) Reset() {
	*x = Story{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Story) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Story) ProtoMessage() {}

func (x *Story) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Story.ProtoReflect.Descriptor instead.
func (*Story) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{1}
}

func (x *Story) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Story) GetStoryAlias() string {
	if x != nil {
		return x.StoryAlias
	}
	return ""
}

func (x *Story) GetStoryPublishmentStatus() PublishmentStatus {
	if x != nil {
		return x.StoryPublishmentStatus
	}
	return PublishmentStatus_PUBLISHMENT_STATUS_UNSPECIFIED
}

func (x *Story) GetStoryPublishedUrl() string {
	if x != nil && x.StoryPublishedUrl != nil {
		return *x.StoryPublishedUrl
	}
	return ""
}

type ProjectMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ProjectMetadata id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Project id
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Workspace id
	WorkspaceId string `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Project readme
	Readme *string `protobuf:"bytes,4,opt,name=readme,proto3,oneof" json:"readme,omitempty"`
	// Project license
	License *string `protobuf:"bytes,5,opt,name=license,proto3,oneof" json:"license,omitempty"`
	// Project topics
	Topics []string `protobuf:"bytes,6,rep,name=topics,proto3" json:"topics,omitempty"`
	// Project import status — if PROCESSING, data should not be retrieved
	ImportStatus ProjectImportStatus `protobuf:"varint,7,opt,name=import_status,json=importStatus,proto3,enum=reearth.visualizer.v1.ProjectImportStatus" json:"import_status,omitempty"`
	// ProjectMetadata created date
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// ProjectMetadata updated date
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Project star_count
	StarCount *int64 `protobuf:"varint,10,opt,name=star_count,json=starCount,proto3,oneof" json:"star_count,omitempty"`
	// Project starred_by
	StarredBy     []string `protobuf:"bytes,11,rep,name=starred_by,json=starredBy,proto3" json:"starred_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectMetadata) Reset() {
	*x = ProjectMetadata{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMetadata) ProtoMessage() {}

func (x *ProjectMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMetadata.ProtoReflect.Descriptor instead.
func (*ProjectMetadata) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectMetadata) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectMetadata) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *ProjectMetadata) GetReadme() string {
	if x != nil && x.Readme != nil {
		return *x.Readme
	}
	return ""
}

func (x *ProjectMetadata) GetLicense() string {
	if x != nil && x.License != nil {
		return *x.License
	}
	return ""
}

func (x *ProjectMetadata) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *ProjectMetadata) GetImportStatus() ProjectImportStatus {
	if x != nil {
		return x.ImportStatus
	}
	return ProjectImportStatus_NONE
}

func (x *ProjectMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProjectMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ProjectMetadata) GetStarCount() int64 {
	if x != nil && x.StarCount != nil {
		return *x.StarCount
	}
	return 0
}

func (x *ProjectMetadata) GetStarredBy() []string {
	if x != nil {
		return x.StarredBy
	}
	return nil
}

// Pagination
type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	First         *int32                 `protobuf:"varint,1,opt,name=first,proto3,oneof" json:"first,omitempty"`
	Last          *int32                 `protobuf:"varint,2,opt,name=last,proto3,oneof" json:"last,omitempty"`
	After         *string                `protobuf:"bytes,3,opt,name=after,proto3,oneof" json:"after,omitempty"`
	Before        *string                `protobuf:"bytes,4,opt,name=before,proto3,oneof" json:"before,omitempty"`
	Limit         *int64                 `protobuf:"varint,6,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *int64                 `protobuf:"varint,7,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{3}
}

func (x *Pagination) GetFirst() int32 {
	if x != nil && x.First != nil {
		return *x.First
	}
	return 0
}

func (x *Pagination) GetLast() int32 {
	if x != nil && x.Last != nil {
		return *x.Last
	}
	return 0
}

func (x *Pagination) GetAfter() string {
	if x != nil && x.After != nil {
		return *x.After
	}
	return ""
}

func (x *Pagination) GetBefore() string {
	if x != nil && x.Before != nil {
		return *x.Before
	}
	return ""
}

func (x *Pagination) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type ProjectSort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         ProjectSortField       `protobuf:"varint,1,opt,name=field,proto3,enum=reearth.visualizer.v1.ProjectSortField" json:"field,omitempty"`
	Direction     SortDirection          `protobuf:"varint,2,opt,name=direction,proto3,enum=reearth.visualizer.v1.SortDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectSort) Reset() {
	*x = ProjectSort{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectSort) ProtoMessage() {}

func (x *ProjectSort) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectSort.ProtoReflect.Descriptor instead.
func (*ProjectSort) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectSort) GetField() ProjectSortField {
	if x != nil {
		return x.Field
	}
	return ProjectSortField_PROJECT_SORT_FIELD_UNSPECIFIED
}

func (x *ProjectSort) GetDirection() SortDirection {
	if x != nil {
		return x.Direction
	}
	return SortDirection_SORT_DIRECTION_UNSPECIFIED
}

type PageInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TotalCount      int64                  `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	StartCursor     *string                `protobuf:"bytes,2,opt,name=start_cursor,json=startCursor,proto3,oneof" json:"start_cursor,omitempty"`
	EndCursor       *string                `protobuf:"bytes,3,opt,name=end_cursor,json=endCursor,proto3,oneof" json:"end_cursor,omitempty"`
	HasNextPage     bool                   `protobuf:"varint,4,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
	HasPreviousPage bool                   `protobuf:"varint,5,opt,name=has_previous_page,json=hasPreviousPage,proto3" json:"has_previous_page,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{5}
}

func (x *PageInfo) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *PageInfo) GetStartCursor() string {
	if x != nil && x.StartCursor != nil {
		return *x.StartCursor
	}
	return ""
}

func (x *PageInfo) GetEndCursor() string {
	if x != nil && x.EndCursor != nil {
		return *x.EndCursor
	}
	return ""
}

func (x *PageInfo) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

func (x *PageInfo) GetHasPreviousPage() bool {
	if x != nil {
		return x.HasPreviousPage
	}
	return false
}

// If the authenticated flag is true, private items will also be included in the
// response. However, deleted items are excluded.
type GetProjectListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workspace ID
	WorkspaceId *string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3,oneof" json:"workspace_id,omitempty"`
	// Authenticated Flag
	Authenticated bool `protobuf:"varint,2,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
	// Keyword search
	Keyword *string `protobuf:"bytes,3,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	// Sort options
	Sort *ProjectSort `protobuf:"bytes,4,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	// Pagination info
	Pagination    *Pagination `protobuf:"bytes,5,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectListRequest) Reset() {
	*x = GetProjectListRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListRequest) ProtoMessage() {}

func (x *GetProjectListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListRequest.ProtoReflect.Descriptor instead.
func (*GetProjectListRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{6}
}

func (x *GetProjectListRequest) GetWorkspaceId() string {
	if x != nil && x.WorkspaceId != nil {
		return *x.WorkspaceId
	}
	return ""
}

func (x *GetProjectListRequest) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

func (x *GetProjectListRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *GetProjectListRequest) GetSort() *ProjectSort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *GetProjectListRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetAllProjectsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Keyword search
	Keyword *string `protobuf:"bytes,1,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	// Sort options
	Sort *ProjectSort `protobuf:"bytes,2,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	// Pagination info
	Pagination *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	// Field to search in (name or topics), defaults to name if not provided
	SearchField *SearchFieldType `protobuf:"varint,4,opt,name=search_field,json=searchField,proto3,enum=reearth.visualizer.v1.SearchFieldType,oneof" json:"search_field,omitempty"`
	// Visibility filter, defaults to public if not provided
	Visibility    *ProjectVisibility `protobuf:"varint,5,opt,name=visibility,proto3,enum=reearth.visualizer.v1.ProjectVisibility,oneof" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllProjectsRequest) Reset() {
	*x = GetAllProjectsRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProjectsRequest) ProtoMessage() {}

func (x *GetAllProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProjectsRequest.ProtoReflect.Descriptor instead.
func (*GetAllProjectsRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllProjectsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *GetAllProjectsRequest) GetSort() *ProjectSort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *GetAllProjectsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllProjectsRequest) GetSearchField() SearchFieldType {
	if x != nil && x.SearchField != nil {
		return *x.SearchField
	}
	return SearchFieldType_SEARCH_FIELD_TYPE_NAME
}

func (x *GetAllProjectsRequest) GetVisibility() ProjectVisibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return ProjectVisibility_PROJECT_VISIBILITY_PUBLIC
}

// Retrieves a project regardless of authentication.
// Note: Call this only if the user is allowed to view the project.
type GetProjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID
	ProjectId     string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectRequest) Reset() {
	*x = GetProjectRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRequest) ProtoMessage() {}

func (x *GetProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{8}
}

func (x *GetProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// Find a project by alias.
type GetProjectByAliasRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Scene alias
	Alias         string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectByAliasRequest) Reset() {
	*x = GetProjectByAliasRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectByAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByAliasRequest) ProtoMessage() {}

func (x *GetProjectByAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByAliasRequest.ProtoReflect.Descriptor instead.
func (*GetProjectByAliasRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{9}
}

func (x *GetProjectByAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

// Determines if an alias is valid.
type ValidateProjectAliasRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workspace ID
	WorkspaceId string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Scene alias
	Alias string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	// Project ID
	ProjectId     *string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateProjectAliasRequest) Reset() {
	*x = ValidateProjectAliasRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateProjectAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateProjectAliasRequest) ProtoMessage() {}

func (x *ValidateProjectAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateProjectAliasRequest.ProtoReflect.Descriptor instead.
func (*ValidateProjectAliasRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{10}
}

func (x *ValidateProjectAliasRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *ValidateProjectAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *ValidateProjectAliasRequest) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

// Determines if an alias is valid.
type ValidateSceneAliasRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID
	ProjectId *string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	// Scene alias
	Alias         string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSceneAliasRequest) Reset() {
	*x = ValidateSceneAliasRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSceneAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSceneAliasRequest) ProtoMessage() {}

func (x *ValidateSceneAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSceneAliasRequest.ProtoReflect.Descriptor instead.
func (*ValidateSceneAliasRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{11}
}

func (x *ValidateSceneAliasRequest) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *ValidateSceneAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

// Creates a new project.
// Cannot be created under a workspace the user does not belong to.
type CreateProjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workspace ID
	WorkspaceId string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Specify VISUALIZER_CESIUM
	Visualizer Visualizer `protobuf:"varint,2,opt,name=visualizer,proto3,enum=reearth.visualizer.v1.Visualizer" json:"visualizer,omitempty"`
	// Project title
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Project description
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Set to true
	CoreSupport *bool `protobuf:"varint,5,opt,name=core_support,json=coreSupport,proto3,oneof" json:"core_support,omitempty"`
	// Visibility of the project (e.g., "public", "private")
	Visibility *string `protobuf:"bytes,6,opt,name=visibility,proto3,oneof" json:"visibility,omitempty"`
	// Project alias
	ProjectAlias *string `protobuf:"bytes,7,opt,name=project_alias,json=projectAlias,proto3,oneof" json:"project_alias,omitempty"`
	// Project readme
	Readme *string `protobuf:"bytes,8,opt,name=readme,proto3,oneof" json:"readme,omitempty"`
	// Project license
	License *string `protobuf:"bytes,9,opt,name=license,proto3,oneof" json:"license,omitempty"`
	// Project topics
	Topics        []string `protobuf:"bytes,10,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{12}
}

func (x *CreateProjectRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CreateProjectRequest) GetVisualizer() Visualizer {
	if x != nil {
		return x.Visualizer
	}
	return Visualizer_VISUALIZER_UNSPECIFIED
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateProjectRequest) GetCoreSupport() bool {
	if x != nil && x.CoreSupport != nil {
		return *x.CoreSupport
	}
	return false
}

func (x *CreateProjectRequest) GetVisibility() string {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return ""
}

func (x *CreateProjectRequest) GetProjectAlias() string {
	if x != nil && x.ProjectAlias != nil {
		return *x.ProjectAlias
	}
	return ""
}

func (x *CreateProjectRequest) GetReadme() string {
	if x != nil && x.Readme != nil {
		return *x.Readme
	}
	return ""
}

func (x *CreateProjectRequest) GetLicense() string {
	if x != nil && x.License != nil {
		return *x.License
	}
	return ""
}

func (x *CreateProjectRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

// Update project fields.
// Only the project owner can operate this
type UpdateProjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID (required)
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Project basic info (optional)
	Name           *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description    *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Archived       *bool   `protobuf:"varint,4,opt,name=archived,proto3,oneof" json:"archived,omitempty"`
	ImageUrl       *string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	DeleteImageUrl *bool   `protobuf:"varint,6,opt,name=delete_image_url,json=deleteImageUrl,proto3,oneof" json:"delete_image_url,omitempty"`
	SceneId        *string `protobuf:"bytes,7,opt,name=scene_id,json=sceneId,proto3,oneof" json:"scene_id,omitempty"`
	Starred        *bool   `protobuf:"varint,8,opt,name=starred,proto3,oneof" json:"starred,omitempty"`
	Deleted        *bool   `protobuf:"varint,9,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	Visibility     *string `protobuf:"bytes,10,opt,name=visibility,proto3,oneof" json:"visibility,omitempty"`
	// Publishment settings (optional)
	PublicTitle       *string `protobuf:"bytes,11,opt,name=public_title,json=publicTitle,proto3,oneof" json:"public_title,omitempty"`
	PublicDescription *string `protobuf:"bytes,12,opt,name=public_description,json=publicDescription,proto3,oneof" json:"public_description,omitempty"`
	PublicImage       *string `protobuf:"bytes,13,opt,name=public_image,json=publicImage,proto3,oneof" json:"public_image,omitempty"`
	PublicNoIndex     *bool   `protobuf:"varint,14,opt,name=public_no_index,json=publicNoIndex,proto3,oneof" json:"public_no_index,omitempty"`
	DeletePublicImage *bool   `protobuf:"varint,15,opt,name=delete_public_image,json=deletePublicImage,proto3,oneof" json:"delete_public_image,omitempty"`
	IsBasicAuthActive *bool   `protobuf:"varint,16,opt,name=is_basic_auth_active,json=isBasicAuthActive,proto3,oneof" json:"is_basic_auth_active,omitempty"`
	BasicAuthUsername *string `protobuf:"bytes,17,opt,name=basic_auth_username,json=basicAuthUsername,proto3,oneof" json:"basic_auth_username,omitempty"`
	BasicAuthPassword *string `protobuf:"bytes,18,opt,name=basic_auth_password,json=basicAuthPassword,proto3,oneof" json:"basic_auth_password,omitempty"`
	EnableGa          *bool   `protobuf:"varint,19,opt,name=enable_ga,json=enableGa,proto3,oneof" json:"enable_ga,omitempty"`
	TrackingId        *string `protobuf:"bytes,20,opt,name=tracking_id,json=trackingId,proto3,oneof" json:"tracking_id,omitempty"`
	ProjectAlias      *string `protobuf:"bytes,21,opt,name=project_alias,json=projectAlias,proto3,oneof" json:"project_alias,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateProjectRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateProjectRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateProjectRequest) GetArchived() bool {
	if x != nil && x.Archived != nil {
		return *x.Archived
	}
	return false
}

func (x *UpdateProjectRequest) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *UpdateProjectRequest) GetDeleteImageUrl() bool {
	if x != nil && x.DeleteImageUrl != nil {
		return *x.DeleteImageUrl
	}
	return false
}

func (x *UpdateProjectRequest) GetSceneId() string {
	if x != nil && x.SceneId != nil {
		return *x.SceneId
	}
	return ""
}

func (x *UpdateProjectRequest) GetStarred() bool {
	if x != nil && x.Starred != nil {
		return *x.Starred
	}
	return false
}

func (x *UpdateProjectRequest) GetDeleted() bool {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return false
}

func (x *UpdateProjectRequest) GetVisibility() string {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return ""
}

func (x *UpdateProjectRequest) GetPublicTitle() string {
	if x != nil && x.PublicTitle != nil {
		return *x.PublicTitle
	}
	return ""
}

func (x *UpdateProjectRequest) GetPublicDescription() string {
	if x != nil && x.PublicDescription != nil {
		return *x.PublicDescription
	}
	return ""
}

func (x *UpdateProjectRequest) GetPublicImage() string {
	if x != nil && x.PublicImage != nil {
		return *x.PublicImage
	}
	return ""
}

func (x *UpdateProjectRequest) GetPublicNoIndex() bool {
	if x != nil && x.PublicNoIndex != nil {
		return *x.PublicNoIndex
	}
	return false
}

func (x *UpdateProjectRequest) GetDeletePublicImage() bool {
	if x != nil && x.DeletePublicImage != nil {
		return *x.DeletePublicImage
	}
	return false
}

func (x *UpdateProjectRequest) GetIsBasicAuthActive() bool {
	if x != nil && x.IsBasicAuthActive != nil {
		return *x.IsBasicAuthActive
	}
	return false
}

func (x *UpdateProjectRequest) GetBasicAuthUsername() string {
	if x != nil && x.BasicAuthUsername != nil {
		return *x.BasicAuthUsername
	}
	return ""
}

func (x *UpdateProjectRequest) GetBasicAuthPassword() string {
	if x != nil && x.BasicAuthPassword != nil {
		return *x.BasicAuthPassword
	}
	return ""
}

func (x *UpdateProjectRequest) GetEnableGa() bool {
	if x != nil && x.EnableGa != nil {
		return *x.EnableGa
	}
	return false
}

func (x *UpdateProjectRequest) GetTrackingId() string {
	if x != nil && x.TrackingId != nil {
		return *x.TrackingId
	}
	return ""
}

func (x *UpdateProjectRequest) GetProjectAlias() string {
	if x != nil && x.ProjectAlias != nil {
		return *x.ProjectAlias
	}
	return ""
}

// Update project publish fields.
// Only the project owner can operate this
type PublishProjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID (required)
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Scene Publishment alias
	Alias *string `protobuf:"bytes,2,opt,name=alias,proto3,oneof" json:"alias,omitempty"`
	// Scene Publishment status
	PublishmentStatus PublishmentStatus `protobuf:"varint,3,opt,name=publishment_status,json=publishmentStatus,proto3,enum=reearth.visualizer.v1.PublishmentStatus" json:"publishment_status,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PublishProjectRequest) Reset() {
	*x = PublishProjectRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishProjectRequest) ProtoMessage() {}

func (x *PublishProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishProjectRequest.ProtoReflect.Descriptor instead.
func (*PublishProjectRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{14}
}

func (x *PublishProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PublishProjectRequest) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *PublishProjectRequest) GetPublishmentStatus() PublishmentStatus {
	if x != nil {
		return x.PublishmentStatus
	}
	return PublishmentStatus_PUBLISHMENT_STATUS_UNSPECIFIED
}

// Updates a new project metadata.
// Cannot be updated under a workspace the user does not belong to.
type UpdateProjectMetadataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Project readme
	Readme *string `protobuf:"bytes,2,opt,name=readme,proto3,oneof" json:"readme,omitempty"`
	// Project license
	License *string `protobuf:"bytes,3,opt,name=license,proto3,oneof" json:"license,omitempty"`
	// Project topics
	Topics        []string `protobuf:"bytes,4,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectMetadataRequest) Reset() {
	*x = UpdateProjectMetadataRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectMetadataRequest) ProtoMessage() {}

func (x *UpdateProjectMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectMetadataRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateProjectMetadataRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateProjectMetadataRequest) GetReadme() string {
	if x != nil && x.Readme != nil {
		return *x.Readme
	}
	return ""
}

func (x *UpdateProjectMetadataRequest) GetLicense() string {
	if x != nil && x.License != nil {
		return *x.License
	}
	return ""
}

func (x *UpdateProjectMetadataRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

// Deletes a project.
// This is a physical deletion, not a logical deletion. Data cannot be restored.
// Only the project owner can operate this
type DeleteProjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID
	ProjectId     string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProjectRequest) Reset() {
	*x = DeleteProjectRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRequest) ProtoMessage() {}

func (x *DeleteProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// Find a project by project alias.
type GetProjectByProjectAliasRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project alias
	ProjectAlias  string `protobuf:"bytes,1,opt,name=project_alias,json=projectAlias,proto3" json:"project_alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectByProjectAliasRequest) Reset() {
	*x = GetProjectByProjectAliasRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectByProjectAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByProjectAliasRequest) ProtoMessage() {}

func (x *GetProjectByProjectAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByProjectAliasRequest.ProtoReflect.Descriptor instead.
func (*GetProjectByProjectAliasRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{17}
}

func (x *GetProjectByProjectAliasRequest) GetProjectAlias() string {
	if x != nil {
		return x.ProjectAlias
	}
	return ""
}

// Update project fields.
// Only the project owner can operate this
type UpdateByProjectAliasRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project alias (required)
	ProjectAlias string `protobuf:"bytes,1,opt,name=project_alias,json=projectAlias,proto3" json:"project_alias,omitempty"`
	// Project basic info (optional)
	Name           *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description    *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Archived       *bool   `protobuf:"varint,4,opt,name=archived,proto3,oneof" json:"archived,omitempty"`
	ImageUrl       *string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	DeleteImageUrl *bool   `protobuf:"varint,6,opt,name=delete_image_url,json=deleteImageUrl,proto3,oneof" json:"delete_image_url,omitempty"`
	SceneId        *string `protobuf:"bytes,7,opt,name=scene_id,json=sceneId,proto3,oneof" json:"scene_id,omitempty"`
	Starred        *bool   `protobuf:"varint,8,opt,name=starred,proto3,oneof" json:"starred,omitempty"`
	Deleted        *bool   `protobuf:"varint,9,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	Visibility     *string `protobuf:"bytes,10,opt,name=visibility,proto3,oneof" json:"visibility,omitempty"`
	// Publishment settings (optional)
	PublicTitle       *string `protobuf:"bytes,11,opt,name=public_title,json=publicTitle,proto3,oneof" json:"public_title,omitempty"`
	PublicDescription *string `protobuf:"bytes,12,opt,name=public_description,json=publicDescription,proto3,oneof" json:"public_description,omitempty"`
	PublicImage       *string `protobuf:"bytes,13,opt,name=public_image,json=publicImage,proto3,oneof" json:"public_image,omitempty"`
	PublicNoIndex     *bool   `protobuf:"varint,14,opt,name=public_no_index,json=publicNoIndex,proto3,oneof" json:"public_no_index,omitempty"`
	DeletePublicImage *bool   `protobuf:"varint,15,opt,name=delete_public_image,json=deletePublicImage,proto3,oneof" json:"delete_public_image,omitempty"`
	IsBasicAuthActive *bool   `protobuf:"varint,16,opt,name=is_basic_auth_active,json=isBasicAuthActive,proto3,oneof" json:"is_basic_auth_active,omitempty"`
	BasicAuthUsername *string `protobuf:"bytes,17,opt,name=basic_auth_username,json=basicAuthUsername,proto3,oneof" json:"basic_auth_username,omitempty"`
	BasicAuthPassword *string `protobuf:"bytes,18,opt,name=basic_auth_password,json=basicAuthPassword,proto3,oneof" json:"basic_auth_password,omitempty"`
	EnableGa          *bool   `protobuf:"varint,19,opt,name=enable_ga,json=enableGa,proto3,oneof" json:"enable_ga,omitempty"`
	TrackingId        *string `protobuf:"bytes,20,opt,name=tracking_id,json=trackingId,proto3,oneof" json:"tracking_id,omitempty"`
	NewProjectAlias   *string `protobuf:"bytes,21,opt,name=new_project_alias,json=newProjectAlias,proto3,oneof" json:"new_project_alias,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateByProjectAliasRequest) Reset() {
	*x = UpdateByProjectAliasRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateByProjectAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateByProjectAliasRequest) ProtoMessage() {}

func (x *UpdateByProjectAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateByProjectAliasRequest.ProtoReflect.Descriptor instead.
func (*UpdateByProjectAliasRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateByProjectAliasRequest) GetProjectAlias() string {
	if x != nil {
		return x.ProjectAlias
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetArchived() bool {
	if x != nil && x.Archived != nil {
		return *x.Archived
	}
	return false
}

func (x *UpdateByProjectAliasRequest) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetDeleteImageUrl() bool {
	if x != nil && x.DeleteImageUrl != nil {
		return *x.DeleteImageUrl
	}
	return false
}

func (x *UpdateByProjectAliasRequest) GetSceneId() string {
	if x != nil && x.SceneId != nil {
		return *x.SceneId
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetStarred() bool {
	if x != nil && x.Starred != nil {
		return *x.Starred
	}
	return false
}

func (x *UpdateByProjectAliasRequest) GetDeleted() bool {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return false
}

func (x *UpdateByProjectAliasRequest) GetVisibility() string {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetPublicTitle() string {
	if x != nil && x.PublicTitle != nil {
		return *x.PublicTitle
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetPublicDescription() string {
	if x != nil && x.PublicDescription != nil {
		return *x.PublicDescription
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetPublicImage() string {
	if x != nil && x.PublicImage != nil {
		return *x.PublicImage
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetPublicNoIndex() bool {
	if x != nil && x.PublicNoIndex != nil {
		return *x.PublicNoIndex
	}
	return false
}

func (x *UpdateByProjectAliasRequest) GetDeletePublicImage() bool {
	if x != nil && x.DeletePublicImage != nil {
		return *x.DeletePublicImage
	}
	return false
}

func (x *UpdateByProjectAliasRequest) GetIsBasicAuthActive() bool {
	if x != nil && x.IsBasicAuthActive != nil {
		return *x.IsBasicAuthActive
	}
	return false
}

func (x *UpdateByProjectAliasRequest) GetBasicAuthUsername() string {
	if x != nil && x.BasicAuthUsername != nil {
		return *x.BasicAuthUsername
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetBasicAuthPassword() string {
	if x != nil && x.BasicAuthPassword != nil {
		return *x.BasicAuthPassword
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetEnableGa() bool {
	if x != nil && x.EnableGa != nil {
		return *x.EnableGa
	}
	return false
}

func (x *UpdateByProjectAliasRequest) GetTrackingId() string {
	if x != nil && x.TrackingId != nil {
		return *x.TrackingId
	}
	return ""
}

func (x *UpdateByProjectAliasRequest) GetNewProjectAlias() string {
	if x != nil && x.NewProjectAlias != nil {
		return *x.NewProjectAlias
	}
	return ""
}

// Deletes a project.
// This is a physical deletion, not a logical deletion. Data cannot be restored.
// Only the project owner can operate this
type DeleteByProjectAliasRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project alias
	ProjectAlias  string `protobuf:"bytes,1,opt,name=project_alias,json=projectAlias,proto3" json:"project_alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteByProjectAliasRequest) Reset() {
	*x = DeleteByProjectAliasRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteByProjectAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByProjectAliasRequest) ProtoMessage() {}

func (x *DeleteByProjectAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByProjectAliasRequest.ProtoReflect.Descriptor instead.
func (*DeleteByProjectAliasRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteByProjectAliasRequest) GetProjectAlias() string {
	if x != nil {
		return x.ProjectAlias
	}
	return ""
}

// Export a project.
type ExportProjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID
	ProjectId     string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportProjectRequest) Reset() {
	*x = ExportProjectRequest{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportProjectRequest) ProtoMessage() {}

func (x *ExportProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportProjectRequest.ProtoReflect.Descriptor instead.
func (*ExportProjectRequest) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{20}
}

func (x *ExportProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// Response messages
type GetProjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectResponse) Reset() {
	*x = GetProjectResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectResponse) ProtoMessage() {}

func (x *GetProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectResponse.ProtoReflect.Descriptor instead.
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{21}
}

func (x *GetProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// Response messages
type GetProjectListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project List
	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	// PageInfo
	PageInfo *PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	// TotalCount
	TotalCount    int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectListResponse) Reset() {
	*x = GetProjectListResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListResponse) ProtoMessage() {}

func (x *GetProjectListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListResponse.ProtoReflect.Descriptor instead.
func (*GetProjectListResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{22}
}

func (x *GetProjectListResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *GetProjectListResponse) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *GetProjectListResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Response messages
type GetAllProjectsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project List
	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	// PageInfo
	PageInfo      *PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllProjectsResponse) Reset() {
	*x = GetAllProjectsResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProjectsResponse) ProtoMessage() {}

func (x *GetAllProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProjectsResponse.ProtoReflect.Descriptor instead.
func (*GetAllProjectsResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{23}
}

func (x *GetAllProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *GetAllProjectsResponse) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

// Response messages
type CreateProjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{24}
}

func (x *CreateProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// Response messages
type UpdateProjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectResponse) Reset() {
	*x = UpdateProjectResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResponse) ProtoMessage() {}

func (x *UpdateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// Response messages
type PublishProjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishProjectResponse) Reset() {
	*x = PublishProjectResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishProjectResponse) ProtoMessage() {}

func (x *PublishProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishProjectResponse.ProtoReflect.Descriptor instead.
func (*PublishProjectResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{26}
}

func (x *PublishProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// Response messages
type UpdateProjectMetadataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project metadata
	Metadata      *ProjectMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectMetadataResponse) Reset() {
	*x = UpdateProjectMetadataResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectMetadataResponse) ProtoMessage() {}

func (x *UpdateProjectMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectMetadataResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateProjectMetadataResponse) GetMetadata() *ProjectMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Response messages
type DeleteProjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID
	ProjectId     string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProjectResponse) Reset() {
	*x = DeleteProjectResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectResponse) ProtoMessage() {}

func (x *DeleteProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectResponse.ProtoReflect.Descriptor instead.
func (*DeleteProjectResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteProjectResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// Response messages
type ExportProjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project Export zip file download url
	ProjectDataPath string `protobuf:"bytes,1,opt,name=project_data_path,json=projectDataPath,proto3" json:"project_data_path,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExportProjectResponse) Reset() {
	*x = ExportProjectResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportProjectResponse) ProtoMessage() {}

func (x *ExportProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportProjectResponse.ProtoReflect.Descriptor instead.
func (*ExportProjectResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{29}
}

func (x *ExportProjectResponse) GetProjectDataPath() string {
	if x != nil {
		return x.ProjectDataPath
	}
	return ""
}

// Response messages
type GetProjectByAliasResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectByAliasResponse) Reset() {
	*x = GetProjectByAliasResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectByAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByAliasResponse) ProtoMessage() {}

func (x *GetProjectByAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByAliasResponse.ProtoReflect.Descriptor instead.
func (*GetProjectByAliasResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{30}
}

func (x *GetProjectByAliasResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// Response messages
type ValidateProjectAliasResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workspace ID
	WorkspaceId string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Scene alias available
	Available bool `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	// Error message
	ErrorMessage  *string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateProjectAliasResponse) Reset() {
	*x = ValidateProjectAliasResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateProjectAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateProjectAliasResponse) ProtoMessage() {}

func (x *ValidateProjectAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateProjectAliasResponse.ProtoReflect.Descriptor instead.
func (*ValidateProjectAliasResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{31}
}

func (x *ValidateProjectAliasResponse) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *ValidateProjectAliasResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *ValidateProjectAliasResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

// Response messages
type ValidateSceneAliasResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID
	ProjectId *string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	// Scene alias available
	Available bool `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	// Error message
	ErrorMessage  *string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSceneAliasResponse) Reset() {
	*x = ValidateSceneAliasResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSceneAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSceneAliasResponse) ProtoMessage() {}

func (x *ValidateSceneAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSceneAliasResponse.ProtoReflect.Descriptor instead.
func (*ValidateSceneAliasResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{32}
}

func (x *ValidateSceneAliasResponse) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *ValidateSceneAliasResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *ValidateSceneAliasResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

// Response messages
type GetProjectByProjectAliasResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectByProjectAliasResponse) Reset() {
	*x = GetProjectByProjectAliasResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectByProjectAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByProjectAliasResponse) ProtoMessage() {}

func (x *GetProjectByProjectAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByProjectAliasResponse.ProtoReflect.Descriptor instead.
func (*GetProjectByProjectAliasResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{33}
}

func (x *GetProjectByProjectAliasResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// Response messages
type UpdateByProjectAliasResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateByProjectAliasResponse) Reset() {
	*x = UpdateByProjectAliasResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateByProjectAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateByProjectAliasResponse) ProtoMessage() {}

func (x *UpdateByProjectAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateByProjectAliasResponse.ProtoReflect.Descriptor instead.
func (*UpdateByProjectAliasResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateByProjectAliasResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// Response messages
type DeleteByProjectAliasResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project alias
	ProjectAlias  string `protobuf:"bytes,1,opt,name=project_alias,json=projectAlias,proto3" json:"project_alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteByProjectAliasResponse) Reset() {
	*x = DeleteByProjectAliasResponse{}
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteByProjectAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByProjectAliasResponse) ProtoMessage() {}

func (x *DeleteByProjectAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_internalapi_v1_schema_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByProjectAliasResponse.ProtoReflect.Descriptor instead.
func (*DeleteByProjectAliasResponse) Descriptor() ([]byte, []int) {
	return file_schemas_internalapi_v1_schema_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteByProjectAliasResponse) GetProjectAlias() string {
	if x != nil {
		return x.ProjectAlias
	}
	return ""
}

var File_schemas_internalapi_v1_schema_proto protoreflect.FileDescriptor

const file_schemas_internalapi_v1_schema_proto_rawDesc = "" +
	"\n" +
	"#schemas/internalapi/v1/schema.proto\x12\x15reearth.visualizer.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x90\a\n" +
	"\aProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fworkspace_id\x18\x02 \x01(\tR\vworkspaceId\x12\x19\n" +
	"\bscene_id\x18\x03 \x01(\tR\asceneId\x126\n" +
	"\astories\x18\x04 \x03(\v2\x1c.reearth.visualizer.v1.StoryR\astories\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12 \n" +
	"\timage_url\x18\a \x01(\tH\x00R\bimageUrl\x88\x01\x01\x12A\n" +
	"\n" +
	"visualizer\x18\b \x01(\x0e2!.reearth.visualizer.v1.VisualizerR\n" +
	"visualizer\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1f\n" +
	"\vis_archived\x18\v \x01(\bR\n" +
	"isArchived\x12!\n" +
	"\fcore_support\x18\f \x01(\bR\vcoreSupport\x12\x18\n" +
	"\astarred\x18\r \x01(\bR\astarred\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\x0e \x01(\bR\tisDeleted\x12\x1e\n" +
	"\n" +
	"visibility\x18\x0f \x01(\tR\n" +
	"visibility\x12\x1d\n" +
	"\n" +
	"editor_url\x18\x10 \x01(\tR\teditorUrl\x12G\n" +
	"\bmetadata\x18\x11 \x01(\v2&.reearth.visualizer.v1.ProjectMetadataH\x01R\bmetadata\x88\x01\x01\x12#\n" +
	"\rproject_alias\x18\x12 \x01(\tR\fprojectAlias\x12\x14\n" +
	"\x05alias\x18\x13 \x01(\tR\x05alias\x12W\n" +
	"\x12publishment_status\x18\x14 \x01(\x0e2(.reearth.visualizer.v1.PublishmentStatusR\x11publishmentStatus\x12(\n" +
	"\rpublished_url\x18\x15 \x01(\tH\x02R\fpublishedUrl\x88\x01\x01B\f\n" +
	"\n" +
	"_image_urlB\v\n" +
	"\t_metadataB\x10\n" +
	"\x0e_published_url\"\xe9\x01\n" +
	"\x05Story\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vstory_alias\x18\x02 \x01(\tR\n" +
	"storyAlias\x12b\n" +
	"\x18story_publishment_status\x18\x03 \x01(\x0e2(.reearth.visualizer.v1.PublishmentStatusR\x16storyPublishmentStatus\x123\n" +
	"\x13story_published_url\x18\x04 \x01(\tH\x00R\x11storyPublishedUrl\x88\x01\x01B\x16\n" +
	"\x14_story_published_url\"\xe7\x03\n" +
	"\x0fProjectMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12!\n" +
	"\fworkspace_id\x18\x03 \x01(\tR\vworkspaceId\x12\x1b\n" +
	"\x06readme\x18\x04 \x01(\tH\x00R\x06readme\x88\x01\x01\x12\x1d\n" +
	"\alicense\x18\x05 \x01(\tH\x01R\alicense\x88\x01\x01\x12\x16\n" +
	"\x06topics\x18\x06 \x03(\tR\x06topics\x12O\n" +
	"\rimport_status\x18\a \x01(\x0e2*.reearth.visualizer.v1.ProjectImportStatusR\fimportStatus\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\"\n" +
	"\n" +
	"star_count\x18\n" +
	" \x01(\x03H\x02R\tstarCount\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"starred_by\x18\v \x03(\tR\tstarredByB\t\n" +
	"\a_readmeB\n" +
	"\n" +
	"\b_licenseB\r\n" +
	"\v_star_count\"\xed\x01\n" +
	"\n" +
	"Pagination\x12\x19\n" +
	"\x05first\x18\x01 \x01(\x05H\x00R\x05first\x88\x01\x01\x12\x17\n" +
	"\x04last\x18\x02 \x01(\x05H\x01R\x04last\x88\x01\x01\x12\x19\n" +
	"\x05after\x18\x03 \x01(\tH\x02R\x05after\x88\x01\x01\x12\x1b\n" +
	"\x06before\x18\x04 \x01(\tH\x03R\x06before\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x06 \x01(\x03H\x04R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\a \x01(\x03H\x05R\x06offset\x88\x01\x01B\b\n" +
	"\x06_firstB\a\n" +
	"\x05_lastB\b\n" +
	"\x06_afterB\t\n" +
	"\a_beforeB\b\n" +
	"\x06_limitB\t\n" +
	"\a_offset\"\x90\x01\n" +
	"\vProjectSort\x12=\n" +
	"\x05field\x18\x01 \x01(\x0e2'.reearth.visualizer.v1.ProjectSortFieldR\x05field\x12B\n" +
	"\tdirection\x18\x02 \x01(\x0e2$.reearth.visualizer.v1.SortDirectionR\tdirection\"\xe7\x01\n" +
	"\bPageInfo\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\x03R\n" +
	"totalCount\x12&\n" +
	"\fstart_cursor\x18\x02 \x01(\tH\x00R\vstartCursor\x88\x01\x01\x12\"\n" +
	"\n" +
	"end_cursor\x18\x03 \x01(\tH\x01R\tendCursor\x88\x01\x01\x12\"\n" +
	"\rhas_next_page\x18\x04 \x01(\bR\vhasNextPage\x12*\n" +
	"\x11has_previous_page\x18\x05 \x01(\bR\x0fhasPreviousPageB\x0f\n" +
	"\r_start_cursorB\r\n" +
	"\v_end_cursor\"\xbe\x02\n" +
	"\x15GetProjectListRequest\x12&\n" +
	"\fworkspace_id\x18\x01 \x01(\tH\x00R\vworkspaceId\x88\x01\x01\x12$\n" +
	"\rauthenticated\x18\x02 \x01(\bR\rauthenticated\x12\x1d\n" +
	"\akeyword\x18\x03 \x01(\tH\x01R\akeyword\x88\x01\x01\x12;\n" +
	"\x04sort\x18\x04 \x01(\v2\".reearth.visualizer.v1.ProjectSortH\x02R\x04sort\x88\x01\x01\x12F\n" +
	"\n" +
	"pagination\x18\x05 \x01(\v2!.reearth.visualizer.v1.PaginationH\x03R\n" +
	"pagination\x88\x01\x01B\x0f\n" +
	"\r_workspace_idB\n" +
	"\n" +
	"\b_keywordB\a\n" +
	"\x05_sortB\r\n" +
	"\v_pagination\"\x9e\x03\n" +
	"\x15GetAllProjectsRequest\x12\x1d\n" +
	"\akeyword\x18\x01 \x01(\tH\x00R\akeyword\x88\x01\x01\x12;\n" +
	"\x04sort\x18\x02 \x01(\v2\".reearth.visualizer.v1.ProjectSortH\x01R\x04sort\x88\x01\x01\x12F\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2!.reearth.visualizer.v1.PaginationH\x02R\n" +
	"pagination\x88\x01\x01\x12N\n" +
	"\fsearch_field\x18\x04 \x01(\x0e2&.reearth.visualizer.v1.SearchFieldTypeH\x03R\vsearchField\x88\x01\x01\x12M\n" +
	"\n" +
	"visibility\x18\x05 \x01(\x0e2(.reearth.visualizer.v1.ProjectVisibilityH\x04R\n" +
	"visibility\x88\x01\x01B\n" +
	"\n" +
	"\b_keywordB\a\n" +
	"\x05_sortB\r\n" +
	"\v_paginationB\x0f\n" +
	"\r_search_fieldB\r\n" +
	"\v_visibility\"2\n" +
	"\x11GetProjectRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"0\n" +
	"\x18GetProjectByAliasRequest\x12\x14\n" +
	"\x05alias\x18\x01 \x01(\tR\x05alias\"\x89\x01\n" +
	"\x1bValidateProjectAliasRequest\x12!\n" +
	"\fworkspace_id\x18\x01 \x01(\tR\vworkspaceId\x12\x14\n" +
	"\x05alias\x18\x02 \x01(\tR\x05alias\x12\"\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tH\x00R\tprojectId\x88\x01\x01B\r\n" +
	"\v_project_id\"d\n" +
	"\x19ValidateSceneAliasRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tH\x00R\tprojectId\x88\x01\x01\x12\x14\n" +
	"\x05alias\x18\x02 \x01(\tR\x05aliasB\r\n" +
	"\v_project_id\"\xe9\x03\n" +
	"\x14CreateProjectRequest\x12!\n" +
	"\fworkspace_id\x18\x01 \x01(\tR\vworkspaceId\x12A\n" +
	"\n" +
	"visualizer\x18\x02 \x01(\x0e2!.reearth.visualizer.v1.VisualizerR\n" +
	"visualizer\x12\x17\n" +
	"\x04name\x18\x03 \x01(\tH\x00R\x04name\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x01R\vdescription\x88\x01\x01\x12&\n" +
	"\fcore_support\x18\x05 \x01(\bH\x02R\vcoreSupport\x88\x01\x01\x12#\n" +
	"\n" +
	"visibility\x18\x06 \x01(\tH\x03R\n" +
	"visibility\x88\x01\x01\x12(\n" +
	"\rproject_alias\x18\a \x01(\tH\x04R\fprojectAlias\x88\x01\x01\x12\x1b\n" +
	"\x06readme\x18\b \x01(\tH\x05R\x06readme\x88\x01\x01\x12\x1d\n" +
	"\alicense\x18\t \x01(\tH\x06R\alicense\x88\x01\x01\x12\x16\n" +
	"\x06topics\x18\n" +
	" \x03(\tR\x06topicsB\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\x0f\n" +
	"\r_core_supportB\r\n" +
	"\v_visibilityB\x10\n" +
	"\x0e_project_aliasB\t\n" +
	"\a_readmeB\n" +
	"\n" +
	"\b_license\"\xbd\t\n" +
	"\x14UpdateProjectRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x01R\vdescription\x88\x01\x01\x12\x1f\n" +
	"\barchived\x18\x04 \x01(\bH\x02R\barchived\x88\x01\x01\x12 \n" +
	"\timage_url\x18\x05 \x01(\tH\x03R\bimageUrl\x88\x01\x01\x12-\n" +
	"\x10delete_image_url\x18\x06 \x01(\bH\x04R\x0edeleteImageUrl\x88\x01\x01\x12\x1e\n" +
	"\bscene_id\x18\a \x01(\tH\x05R\asceneId\x88\x01\x01\x12\x1d\n" +
	"\astarred\x18\b \x01(\bH\x06R\astarred\x88\x01\x01\x12\x1d\n" +
	"\adeleted\x18\t \x01(\bH\aR\adeleted\x88\x01\x01\x12#\n" +
	"\n" +
	"visibility\x18\n" +
	" \x01(\tH\bR\n" +
	"visibility\x88\x01\x01\x12&\n" +
	"\fpublic_title\x18\v \x01(\tH\tR\vpublicTitle\x88\x01\x01\x122\n" +
	"\x12public_description\x18\f \x01(\tH\n" +
	"R\x11publicDescription\x88\x01\x01\x12&\n" +
	"\fpublic_image\x18\r \x01(\tH\vR\vpublicImage\x88\x01\x01\x12+\n" +
	"\x0fpublic_no_index\x18\x0e \x01(\bH\fR\rpublicNoIndex\x88\x01\x01\x123\n" +
	"\x13delete_public_image\x18\x0f \x01(\bH\rR\x11deletePublicImage\x88\x01\x01\x124\n" +
	"\x14is_basic_auth_active\x18\x10 \x01(\bH\x0eR\x11isBasicAuthActive\x88\x01\x01\x123\n" +
	"\x13basic_auth_username\x18\x11 \x01(\tH\x0fR\x11basicAuthUsername\x88\x01\x01\x123\n" +
	"\x13basic_auth_password\x18\x12 \x01(\tH\x10R\x11basicAuthPassword\x88\x01\x01\x12 \n" +
	"\tenable_ga\x18\x13 \x01(\bH\x11R\benableGa\x88\x01\x01\x12$\n" +
	"\vtracking_id\x18\x14 \x01(\tH\x12R\n" +
	"trackingId\x88\x01\x01\x12(\n" +
	"\rproject_alias\x18\x15 \x01(\tH\x13R\fprojectAlias\x88\x01\x01B\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\v\n" +
	"\t_archivedB\f\n" +
	"\n" +
	"_image_urlB\x13\n" +
	"\x11_delete_image_urlB\v\n" +
	"\t_scene_idB\n" +
	"\n" +
	"\b_starredB\n" +
	"\n" +
	"\b_deletedB\r\n" +
	"\v_visibilityB\x0f\n" +
	"\r_public_titleB\x15\n" +
	"\x13_public_descriptionB\x0f\n" +
	"\r_public_imageB\x12\n" +
	"\x10_public_no_indexB\x16\n" +
	"\x14_delete_public_imageB\x17\n" +
	"\x15_is_basic_auth_activeB\x16\n" +
	"\x14_basic_auth_usernameB\x16\n" +
	"\x14_basic_auth_passwordB\f\n" +
	"\n" +
	"_enable_gaB\x0e\n" +
	"\f_tracking_idB\x10\n" +
	"\x0e_project_alias\"\xb4\x01\n" +
	"\x15PublishProjectRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x19\n" +
	"\x05alias\x18\x02 \x01(\tH\x00R\x05alias\x88\x01\x01\x12W\n" +
	"\x12publishment_status\x18\x03 \x01(\x0e2(.reearth.visualizer.v1.PublishmentStatusR\x11publishmentStatusB\b\n" +
	"\x06_alias\"\xa8\x01\n" +
	"\x1cUpdateProjectMetadataRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\x06readme\x18\x02 \x01(\tH\x00R\x06readme\x88\x01\x01\x12\x1d\n" +
	"\alicense\x18\x03 \x01(\tH\x01R\alicense\x88\x01\x01\x12\x16\n" +
	"\x06topics\x18\x04 \x03(\tR\x06topicsB\t\n" +
	"\a_readmeB\n" +
	"\n" +
	"\b_license\"5\n" +
	"\x14DeleteProjectRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"F\n" +
	"\x1fGetProjectByProjectAliasRequest\x12#\n" +
	"\rproject_alias\x18\x01 \x01(\tR\fprojectAlias\"\xd5\t\n" +
	"\x1bUpdateByProjectAliasRequest\x12#\n" +
	"\rproject_alias\x18\x01 \x01(\tR\fprojectAlias\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x01R\vdescription\x88\x01\x01\x12\x1f\n" +
	"\barchived\x18\x04 \x01(\bH\x02R\barchived\x88\x01\x01\x12 \n" +
	"\timage_url\x18\x05 \x01(\tH\x03R\bimageUrl\x88\x01\x01\x12-\n" +
	"\x10delete_image_url\x18\x06 \x01(\bH\x04R\x0edeleteImageUrl\x88\x01\x01\x12\x1e\n" +
	"\bscene_id\x18\a \x01(\tH\x05R\asceneId\x88\x01\x01\x12\x1d\n" +
	"\astarred\x18\b \x01(\bH\x06R\astarred\x88\x01\x01\x12\x1d\n" +
	"\adeleted\x18\t \x01(\bH\aR\adeleted\x88\x01\x01\x12#\n" +
	"\n" +
	"visibility\x18\n" +
	" \x01(\tH\bR\n" +
	"visibility\x88\x01\x01\x12&\n" +
	"\fpublic_title\x18\v \x01(\tH\tR\vpublicTitle\x88\x01\x01\x122\n" +
	"\x12public_description\x18\f \x01(\tH\n" +
	"R\x11publicDescription\x88\x01\x01\x12&\n" +
	"\fpublic_image\x18\r \x01(\tH\vR\vpublicImage\x88\x01\x01\x12+\n" +
	"\x0fpublic_no_index\x18\x0e \x01(\bH\fR\rpublicNoIndex\x88\x01\x01\x123\n" +
	"\x13delete_public_image\x18\x0f \x01(\bH\rR\x11deletePublicImage\x88\x01\x01\x124\n" +
	"\x14is_basic_auth_active\x18\x10 \x01(\bH\x0eR\x11isBasicAuthActive\x88\x01\x01\x123\n" +
	"\x13basic_auth_username\x18\x11 \x01(\tH\x0fR\x11basicAuthUsername\x88\x01\x01\x123\n" +
	"\x13basic_auth_password\x18\x12 \x01(\tH\x10R\x11basicAuthPassword\x88\x01\x01\x12 \n" +
	"\tenable_ga\x18\x13 \x01(\bH\x11R\benableGa\x88\x01\x01\x12$\n" +
	"\vtracking_id\x18\x14 \x01(\tH\x12R\n" +
	"trackingId\x88\x01\x01\x12/\n" +
	"\x11new_project_alias\x18\x15 \x01(\tH\x13R\x0fnewProjectAlias\x88\x01\x01B\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\v\n" +
	"\t_archivedB\f\n" +
	"\n" +
	"_image_urlB\x13\n" +
	"\x11_delete_image_urlB\v\n" +
	"\t_scene_idB\n" +
	"\n" +
	"\b_starredB\n" +
	"\n" +
	"\b_deletedB\r\n" +
	"\v_visibilityB\x0f\n" +
	"\r_public_titleB\x15\n" +
	"\x13_public_descriptionB\x0f\n" +
	"\r_public_imageB\x12\n" +
	"\x10_public_no_indexB\x16\n" +
	"\x14_delete_public_imageB\x17\n" +
	"\x15_is_basic_auth_activeB\x16\n" +
	"\x14_basic_auth_usernameB\x16\n" +
	"\x14_basic_auth_passwordB\f\n" +
	"\n" +
	"_enable_gaB\x0e\n" +
	"\f_tracking_idB\x14\n" +
	"\x12_new_project_alias\"B\n" +
	"\x1bDeleteByProjectAliasRequest\x12#\n" +
	"\rproject_alias\x18\x01 \x01(\tR\fprojectAlias\"5\n" +
	"\x14ExportProjectRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"N\n" +
	"\x12GetProjectResponse\x128\n" +
	"\aproject\x18\x01 \x01(\v2\x1e.reearth.visualizer.v1.ProjectR\aproject\"\xb3\x01\n" +
	"\x16GetProjectListResponse\x12:\n" +
	"\bprojects\x18\x01 \x03(\v2\x1e.reearth.visualizer.v1.ProjectR\bprojects\x12<\n" +
	"\tpage_info\x18\x02 \x01(\v2\x1f.reearth.visualizer.v1.PageInfoR\bpageInfo\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\x92\x01\n" +
	"\x16GetAllProjectsResponse\x12:\n" +
	"\bprojects\x18\x01 \x03(\v2\x1e.reearth.visualizer.v1.ProjectR\bprojects\x12<\n" +
	"\tpage_info\x18\x02 \x01(\v2\x1f.reearth.visualizer.v1.PageInfoR\bpageInfo\"Q\n" +
	"\x15CreateProjectResponse\x128\n" +
	"\aproject\x18\x01 \x01(\v2\x1e.reearth.visualizer.v1.ProjectR\aproject\"Q\n" +
	"\x15UpdateProjectResponse\x128\n" +
	"\aproject\x18\x01 \x01(\v2\x1e.reearth.visualizer.v1.ProjectR\aproject\"R\n" +
	"\x16PublishProjectResponse\x128\n" +
	"\aproject\x18\x01 \x01(\v2\x1e.reearth.visualizer.v1.ProjectR\aproject\"c\n" +
	"\x1dUpdateProjectMetadataResponse\x12B\n" +
	"\bmetadata\x18\x01 \x01(\v2&.reearth.visualizer.v1.ProjectMetadataR\bmetadata\"6\n" +
	"\x15DeleteProjectResponse\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"C\n" +
	"\x15ExportProjectResponse\x12*\n" +
	"\x11project_data_path\x18\x01 \x01(\tR\x0fprojectDataPath\"U\n" +
	"\x19GetProjectByAliasResponse\x128\n" +
	"\aproject\x18\x01 \x01(\v2\x1e.reearth.visualizer.v1.ProjectR\aproject\"\x9b\x01\n" +
	"\x1cValidateProjectAliasResponse\x12!\n" +
	"\fworkspace_id\x18\x01 \x01(\tR\vworkspaceId\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\bR\tavailable\x12(\n" +
	"\rerror_message\x18\x03 \x01(\tH\x00R\ferrorMessage\x88\x01\x01B\x10\n" +
	"\x0e_error_message\"\xa9\x01\n" +
	"\x1aValidateSceneAliasResponse\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tH\x00R\tprojectId\x88\x01\x01\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\bR\tavailable\x12(\n" +
	"\rerror_message\x18\x03 \x01(\tH\x01R\ferrorMessage\x88\x01\x01B\r\n" +
	"\v_project_idB\x10\n" +
	"\x0e_error_message\"\\\n" +
	" GetProjectByProjectAliasResponse\x128\n" +
	"\aproject\x18\x01 \x01(\v2\x1e.reearth.visualizer.v1.ProjectR\aproject\"X\n" +
	"\x1cUpdateByProjectAliasResponse\x128\n" +
	"\aproject\x18\x01 \x01(\v2\x1e.reearth.visualizer.v1.ProjectR\aproject\"C\n" +
	"\x1cDeleteByProjectAliasResponse\x12#\n" +
	"\rproject_alias\x18\x01 \x01(\tR\fprojectAlias*[\n" +
	"\n" +
	"Visualizer\x12\x1a\n" +
	"\x16VISUALIZER_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11VISUALIZER_CESIUM\x10\x01\x12\x1a\n" +
	"\x16VISUALIZER_CESIUM_BETA\x10\x02*F\n" +
	"\x13ProjectImportStatus\x12\b\n" +
	"\x04NONE\x10\x00\x12\x0e\n" +
	"\n" +
	"PROCESSING\x10\x01\x12\b\n" +
	"\x04FAIL\x10\x02\x12\v\n" +
	"\aSUCCESS\x10\x03*\x96\x01\n" +
	"\x11PublishmentStatus\x12\"\n" +
	"\x1ePUBLISHMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PUBLISHMENT_STATUS_PUBLIC\x10\x01\x12\x1e\n" +
	"\x1aPUBLISHMENT_STATUS_LIMITED\x10\x02\x12\x1e\n" +
	"\x1aPUBLISHMENT_STATUS_PRIVATE\x10\x03*^\n" +
	"\x10ProjectSortField\x12\"\n" +
	"\x1ePROJECT_SORT_FIELD_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tUPDATEDAT\x10\x01\x12\b\n" +
	"\x04NAME\x10\x02\x12\r\n" +
	"\tSTARCOUNT\x10\x03*B\n" +
	"\rSortDirection\x12\x1e\n" +
	"\x1aSORT_DIRECTION_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03ASC\x10\x01\x12\b\n" +
	"\x04DESC\x10\x02*K\n" +
	"\x0fSearchFieldType\x12\x1a\n" +
	"\x16SEARCH_FIELD_TYPE_NAME\x10\x00\x12\x1c\n" +
	"\x18SEARCH_FIELD_TYPE_TOPICS\x10\x01*R\n" +
	"\x11ProjectVisibility\x12\x1d\n" +
	"\x19PROJECT_VISIBILITY_PUBLIC\x10\x00\x12\x1e\n" +
	"\x1aPROJECT_VISIBILITY_PRIVATE\x10\x012\x9d\x0e\n" +
	"\x11ReEarthVisualizer\x12o\n" +
	"\x0eGetProjectList\x12,.reearth.visualizer.v1.GetProjectListRequest\x1a-.reearth.visualizer.v1.GetProjectListResponse\"\x00\x12o\n" +
	"\x0eGetAllProjects\x12,.reearth.visualizer.v1.GetAllProjectsRequest\x1a-.reearth.visualizer.v1.GetAllProjectsResponse\"\x00\x12c\n" +
	"\n" +
	"GetProject\x12(.reearth.visualizer.v1.GetProjectRequest\x1a).reearth.visualizer.v1.GetProjectResponse\"\x00\x12x\n" +
	"\x11GetProjectByAlias\x12/.reearth.visualizer.v1.GetProjectByAliasRequest\x1a0.reearth.visualizer.v1.GetProjectByAliasResponse\"\x00\x12\x81\x01\n" +
	"\x14ValidateProjectAlias\x122.reearth.visualizer.v1.ValidateProjectAliasRequest\x1a3.reearth.visualizer.v1.ValidateProjectAliasResponse\"\x00\x12{\n" +
	"\x12ValidateSceneAlias\x120.reearth.visualizer.v1.ValidateSceneAliasRequest\x1a1.reearth.visualizer.v1.ValidateSceneAliasResponse\"\x00\x12l\n" +
	"\rCreateProject\x12+.reearth.visualizer.v1.CreateProjectRequest\x1a,.reearth.visualizer.v1.CreateProjectResponse\"\x00\x12l\n" +
	"\rUpdateProject\x12+.reearth.visualizer.v1.UpdateProjectRequest\x1a,.reearth.visualizer.v1.UpdateProjectResponse\"\x00\x12o\n" +
	"\x0ePublishProject\x12,.reearth.visualizer.v1.PublishProjectRequest\x1a-.reearth.visualizer.v1.PublishProjectResponse\"\x00\x12\x84\x01\n" +
	"\x15UpdateProjectMetadata\x123.reearth.visualizer.v1.UpdateProjectMetadataRequest\x1a4.reearth.visualizer.v1.UpdateProjectMetadataResponse\"\x00\x12l\n" +
	"\rDeleteProject\x12+.reearth.visualizer.v1.DeleteProjectRequest\x1a,.reearth.visualizer.v1.DeleteProjectResponse\"\x00\x12l\n" +
	"\rExportProject\x12+.reearth.visualizer.v1.ExportProjectRequest\x1a,.reearth.visualizer.v1.ExportProjectResponse\"\x00\x12\x8d\x01\n" +
	"\x18GetProjectByProjectAlias\x126.reearth.visualizer.v1.GetProjectByProjectAliasRequest\x1a7.reearth.visualizer.v1.GetProjectByProjectAliasResponse\"\x00\x12\x81\x01\n" +
	"\x14UpdateByProjectAlias\x122.reearth.visualizer.v1.UpdateByProjectAliasRequest\x1a3.reearth.visualizer.v1.UpdateByProjectAliasResponse\"\x00\x12\x81\x01\n" +
	"\x14DeleteByProjectAlias\x122.reearth.visualizer.v1.DeleteByProjectAliasRequest\x1a3.reearth.visualizer.v1.DeleteByProjectAliasResponse\"\x00B\n" +
	"Z\bproto/v1b\x06proto3"

var (
	file_schemas_internalapi_v1_schema_proto_rawDescOnce sync.Once
	file_schemas_internalapi_v1_schema_proto_rawDescData []byte
)

func file_schemas_internalapi_v1_schema_proto_rawDescGZIP() []byte {
	file_schemas_internalapi_v1_schema_proto_rawDescOnce.Do(func() {
		file_schemas_internalapi_v1_schema_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schemas_internalapi_v1_schema_proto_rawDesc), len(file_schemas_internalapi_v1_schema_proto_rawDesc)))
	})
	return file_schemas_internalapi_v1_schema_proto_rawDescData
}

var file_schemas_internalapi_v1_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_schemas_internalapi_v1_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_schemas_internalapi_v1_schema_proto_goTypes = []any{
	(Visualizer)(0),                          // 0: reearth.visualizer.v1.Visualizer
	(ProjectImportStatus)(0),                 // 1: reearth.visualizer.v1.ProjectImportStatus
	(PublishmentStatus)(0),                   // 2: reearth.visualizer.v1.PublishmentStatus
	(ProjectSortField)(0),                    // 3: reearth.visualizer.v1.ProjectSortField
	(SortDirection)(0),                       // 4: reearth.visualizer.v1.SortDirection
	(SearchFieldType)(0),                     // 5: reearth.visualizer.v1.SearchFieldType
	(ProjectVisibility)(0),                   // 6: reearth.visualizer.v1.ProjectVisibility
	(*Project)(nil),                          // 7: reearth.visualizer.v1.Project
	(*Story)(nil),                            // 8: reearth.visualizer.v1.Story
	(*ProjectMetadata)(nil),                  // 9: reearth.visualizer.v1.ProjectMetadata
	(*Pagination)(nil),                       // 10: reearth.visualizer.v1.Pagination
	(*ProjectSort)(nil),                      // 11: reearth.visualizer.v1.ProjectSort
	(*PageInfo)(nil),                         // 12: reearth.visualizer.v1.PageInfo
	(*GetProjectListRequest)(nil),            // 13: reearth.visualizer.v1.GetProjectListRequest
	(*GetAllProjectsRequest)(nil),            // 14: reearth.visualizer.v1.GetAllProjectsRequest
	(*GetProjectRequest)(nil),                // 15: reearth.visualizer.v1.GetProjectRequest
	(*GetProjectByAliasRequest)(nil),         // 16: reearth.visualizer.v1.GetProjectByAliasRequest
	(*ValidateProjectAliasRequest)(nil),      // 17: reearth.visualizer.v1.ValidateProjectAliasRequest
	(*ValidateSceneAliasRequest)(nil),        // 18: reearth.visualizer.v1.ValidateSceneAliasRequest
	(*CreateProjectRequest)(nil),             // 19: reearth.visualizer.v1.CreateProjectRequest
	(*UpdateProjectRequest)(nil),             // 20: reearth.visualizer.v1.UpdateProjectRequest
	(*PublishProjectRequest)(nil),            // 21: reearth.visualizer.v1.PublishProjectRequest
	(*UpdateProjectMetadataRequest)(nil),     // 22: reearth.visualizer.v1.UpdateProjectMetadataRequest
	(*DeleteProjectRequest)(nil),             // 23: reearth.visualizer.v1.DeleteProjectRequest
	(*GetProjectByProjectAliasRequest)(nil),  // 24: reearth.visualizer.v1.GetProjectByProjectAliasRequest
	(*UpdateByProjectAliasRequest)(nil),      // 25: reearth.visualizer.v1.UpdateByProjectAliasRequest
	(*DeleteByProjectAliasRequest)(nil),      // 26: reearth.visualizer.v1.DeleteByProjectAliasRequest
	(*ExportProjectRequest)(nil),             // 27: reearth.visualizer.v1.ExportProjectRequest
	(*GetProjectResponse)(nil),               // 28: reearth.visualizer.v1.GetProjectResponse
	(*GetProjectListResponse)(nil),           // 29: reearth.visualizer.v1.GetProjectListResponse
	(*GetAllProjectsResponse)(nil),           // 30: reearth.visualizer.v1.GetAllProjectsResponse
	(*CreateProjectResponse)(nil),            // 31: reearth.visualizer.v1.CreateProjectResponse
	(*UpdateProjectResponse)(nil),            // 32: reearth.visualizer.v1.UpdateProjectResponse
	(*PublishProjectResponse)(nil),           // 33: reearth.visualizer.v1.PublishProjectResponse
	(*UpdateProjectMetadataResponse)(nil),    // 34: reearth.visualizer.v1.UpdateProjectMetadataResponse
	(*DeleteProjectResponse)(nil),            // 35: reearth.visualizer.v1.DeleteProjectResponse
	(*ExportProjectResponse)(nil),            // 36: reearth.visualizer.v1.ExportProjectResponse
	(*GetProjectByAliasResponse)(nil),        // 37: reearth.visualizer.v1.GetProjectByAliasResponse
	(*ValidateProjectAliasResponse)(nil),     // 38: reearth.visualizer.v1.ValidateProjectAliasResponse
	(*ValidateSceneAliasResponse)(nil),       // 39: reearth.visualizer.v1.ValidateSceneAliasResponse
	(*GetProjectByProjectAliasResponse)(nil), // 40: reearth.visualizer.v1.GetProjectByProjectAliasResponse
	(*UpdateByProjectAliasResponse)(nil),     // 41: reearth.visualizer.v1.UpdateByProjectAliasResponse
	(*DeleteByProjectAliasResponse)(nil),     // 42: reearth.visualizer.v1.DeleteByProjectAliasResponse
	(*timestamppb.Timestamp)(nil),            // 43: google.protobuf.Timestamp
}
var file_schemas_internalapi_v1_schema_proto_depIdxs = []int32{
	8,  // 0: reearth.visualizer.v1.Project.stories:type_name -> reearth.visualizer.v1.Story
	0,  // 1: reearth.visualizer.v1.Project.visualizer:type_name -> reearth.visualizer.v1.Visualizer
	43, // 2: reearth.visualizer.v1.Project.created_at:type_name -> google.protobuf.Timestamp
	43, // 3: reearth.visualizer.v1.Project.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 4: reearth.visualizer.v1.Project.metadata:type_name -> reearth.visualizer.v1.ProjectMetadata
	2,  // 5: reearth.visualizer.v1.Project.publishment_status:type_name -> reearth.visualizer.v1.PublishmentStatus
	2,  // 6: reearth.visualizer.v1.Story.story_publishment_status:type_name -> reearth.visualizer.v1.PublishmentStatus
	1,  // 7: reearth.visualizer.v1.ProjectMetadata.import_status:type_name -> reearth.visualizer.v1.ProjectImportStatus
	43, // 8: reearth.visualizer.v1.ProjectMetadata.created_at:type_name -> google.protobuf.Timestamp
	43, // 9: reearth.visualizer.v1.ProjectMetadata.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 10: reearth.visualizer.v1.ProjectSort.field:type_name -> reearth.visualizer.v1.ProjectSortField
	4,  // 11: reearth.visualizer.v1.ProjectSort.direction:type_name -> reearth.visualizer.v1.SortDirection
	11, // 12: reearth.visualizer.v1.GetProjectListRequest.sort:type_name -> reearth.visualizer.v1.ProjectSort
	10, // 13: reearth.visualizer.v1.GetProjectListRequest.pagination:type_name -> reearth.visualizer.v1.Pagination
	11, // 14: reearth.visualizer.v1.GetAllProjectsRequest.sort:type_name -> reearth.visualizer.v1.ProjectSort
	10, // 15: reearth.visualizer.v1.GetAllProjectsRequest.pagination:type_name -> reearth.visualizer.v1.Pagination
	5,  // 16: reearth.visualizer.v1.GetAllProjectsRequest.search_field:type_name -> reearth.visualizer.v1.SearchFieldType
	6,  // 17: reearth.visualizer.v1.GetAllProjectsRequest.visibility:type_name -> reearth.visualizer.v1.ProjectVisibility
	0,  // 18: reearth.visualizer.v1.CreateProjectRequest.visualizer:type_name -> reearth.visualizer.v1.Visualizer
	2,  // 19: reearth.visualizer.v1.PublishProjectRequest.publishment_status:type_name -> reearth.visualizer.v1.PublishmentStatus
	7,  // 20: reearth.visualizer.v1.GetProjectResponse.project:type_name -> reearth.visualizer.v1.Project
	7,  // 21: reearth.visualizer.v1.GetProjectListResponse.projects:type_name -> reearth.visualizer.v1.Project
	12, // 22: reearth.visualizer.v1.GetProjectListResponse.page_info:type_name -> reearth.visualizer.v1.PageInfo
	7,  // 23: reearth.visualizer.v1.GetAllProjectsResponse.projects:type_name -> reearth.visualizer.v1.Project
	12, // 24: reearth.visualizer.v1.GetAllProjectsResponse.page_info:type_name -> reearth.visualizer.v1.PageInfo
	7,  // 25: reearth.visualizer.v1.CreateProjectResponse.project:type_name -> reearth.visualizer.v1.Project
	7,  // 26: reearth.visualizer.v1.UpdateProjectResponse.project:type_name -> reearth.visualizer.v1.Project
	7,  // 27: reearth.visualizer.v1.PublishProjectResponse.project:type_name -> reearth.visualizer.v1.Project
	9,  // 28: reearth.visualizer.v1.UpdateProjectMetadataResponse.metadata:type_name -> reearth.visualizer.v1.ProjectMetadata
	7,  // 29: reearth.visualizer.v1.GetProjectByAliasResponse.project:type_name -> reearth.visualizer.v1.Project
	7,  // 30: reearth.visualizer.v1.GetProjectByProjectAliasResponse.project:type_name -> reearth.visualizer.v1.Project
	7,  // 31: reearth.visualizer.v1.UpdateByProjectAliasResponse.project:type_name -> reearth.visualizer.v1.Project
	13, // 32: reearth.visualizer.v1.ReEarthVisualizer.GetProjectList:input_type -> reearth.visualizer.v1.GetProjectListRequest
	14, // 33: reearth.visualizer.v1.ReEarthVisualizer.GetAllProjects:input_type -> reearth.visualizer.v1.GetAllProjectsRequest
	15, // 34: reearth.visualizer.v1.ReEarthVisualizer.GetProject:input_type -> reearth.visualizer.v1.GetProjectRequest
	16, // 35: reearth.visualizer.v1.ReEarthVisualizer.GetProjectByAlias:input_type -> reearth.visualizer.v1.GetProjectByAliasRequest
	17, // 36: reearth.visualizer.v1.ReEarthVisualizer.ValidateProjectAlias:input_type -> reearth.visualizer.v1.ValidateProjectAliasRequest
	18, // 37: reearth.visualizer.v1.ReEarthVisualizer.ValidateSceneAlias:input_type -> reearth.visualizer.v1.ValidateSceneAliasRequest
	19, // 38: reearth.visualizer.v1.ReEarthVisualizer.CreateProject:input_type -> reearth.visualizer.v1.CreateProjectRequest
	20, // 39: reearth.visualizer.v1.ReEarthVisualizer.UpdateProject:input_type -> reearth.visualizer.v1.UpdateProjectRequest
	21, // 40: reearth.visualizer.v1.ReEarthVisualizer.PublishProject:input_type -> reearth.visualizer.v1.PublishProjectRequest
	22, // 41: reearth.visualizer.v1.ReEarthVisualizer.UpdateProjectMetadata:input_type -> reearth.visualizer.v1.UpdateProjectMetadataRequest
	23, // 42: reearth.visualizer.v1.ReEarthVisualizer.DeleteProject:input_type -> reearth.visualizer.v1.DeleteProjectRequest
	27, // 43: reearth.visualizer.v1.ReEarthVisualizer.ExportProject:input_type -> reearth.visualizer.v1.ExportProjectRequest
	24, // 44: reearth.visualizer.v1.ReEarthVisualizer.GetProjectByProjectAlias:input_type -> reearth.visualizer.v1.GetProjectByProjectAliasRequest
	25, // 45: reearth.visualizer.v1.ReEarthVisualizer.UpdateByProjectAlias:input_type -> reearth.visualizer.v1.UpdateByProjectAliasRequest
	26, // 46: reearth.visualizer.v1.ReEarthVisualizer.DeleteByProjectAlias:input_type -> reearth.visualizer.v1.DeleteByProjectAliasRequest
	29, // 47: reearth.visualizer.v1.ReEarthVisualizer.GetProjectList:output_type -> reearth.visualizer.v1.GetProjectListResponse
	30, // 48: reearth.visualizer.v1.ReEarthVisualizer.GetAllProjects:output_type -> reearth.visualizer.v1.GetAllProjectsResponse
	28, // 49: reearth.visualizer.v1.ReEarthVisualizer.GetProject:output_type -> reearth.visualizer.v1.GetProjectResponse
	37, // 50: reearth.visualizer.v1.ReEarthVisualizer.GetProjectByAlias:output_type -> reearth.visualizer.v1.GetProjectByAliasResponse
	38, // 51: reearth.visualizer.v1.ReEarthVisualizer.ValidateProjectAlias:output_type -> reearth.visualizer.v1.ValidateProjectAliasResponse
	39, // 52: reearth.visualizer.v1.ReEarthVisualizer.ValidateSceneAlias:output_type -> reearth.visualizer.v1.ValidateSceneAliasResponse
	31, // 53: reearth.visualizer.v1.ReEarthVisualizer.CreateProject:output_type -> reearth.visualizer.v1.CreateProjectResponse
	32, // 54: reearth.visualizer.v1.ReEarthVisualizer.UpdateProject:output_type -> reearth.visualizer.v1.UpdateProjectResponse
	33, // 55: reearth.visualizer.v1.ReEarthVisualizer.PublishProject:output_type -> reearth.visualizer.v1.PublishProjectResponse
	34, // 56: reearth.visualizer.v1.ReEarthVisualizer.UpdateProjectMetadata:output_type -> reearth.visualizer.v1.UpdateProjectMetadataResponse
	35, // 57: reearth.visualizer.v1.ReEarthVisualizer.DeleteProject:output_type -> reearth.visualizer.v1.DeleteProjectResponse
	36, // 58: reearth.visualizer.v1.ReEarthVisualizer.ExportProject:output_type -> reearth.visualizer.v1.ExportProjectResponse
	40, // 59: reearth.visualizer.v1.ReEarthVisualizer.GetProjectByProjectAlias:output_type -> reearth.visualizer.v1.GetProjectByProjectAliasResponse
	41, // 60: reearth.visualizer.v1.ReEarthVisualizer.UpdateByProjectAlias:output_type -> reearth.visualizer.v1.UpdateByProjectAliasResponse
	42, // 61: reearth.visualizer.v1.ReEarthVisualizer.DeleteByProjectAlias:output_type -> reearth.visualizer.v1.DeleteByProjectAliasResponse
	47, // [47:62] is the sub-list for method output_type
	32, // [32:47] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_schemas_internalapi_v1_schema_proto_init() }
func file_schemas_internalapi_v1_schema_proto_init() {
	if File_schemas_internalapi_v1_schema_proto != nil {
		return
	}
	file_schemas_internalapi_v1_schema_proto_msgTypes[0].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[1].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[2].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[3].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[5].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[6].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[7].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[10].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[11].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[12].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[13].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[14].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[15].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[18].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[31].OneofWrappers = []any{}
	file_schemas_internalapi_v1_schema_proto_msgTypes[32].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schemas_internalapi_v1_schema_proto_rawDesc), len(file_schemas_internalapi_v1_schema_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schemas_internalapi_v1_schema_proto_goTypes,
		DependencyIndexes: file_schemas_internalapi_v1_schema_proto_depIdxs,
		EnumInfos:         file_schemas_internalapi_v1_schema_proto_enumTypes,
		MessageInfos:      file_schemas_internalapi_v1_schema_proto_msgTypes,
	}.Build()
	File_schemas_internalapi_v1_schema_proto = out.File
	file_schemas_internalapi_v1_schema_proto_goTypes = nil
	file_schemas_internalapi_v1_schema_proto_depIdxs = nil
}
