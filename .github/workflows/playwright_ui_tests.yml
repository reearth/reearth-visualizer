name: Playwright E2E Tests

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/e2e/playwright-tests

    env:
      DEV_BASEURL: ${{ secrets.REEARTH_WEB_E2E_BASEURL }}

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    #--------------------------------------------------------------
    #  Decide which BASEURL to hit
    #--------------------------------------------------------------
    - name: Determine BASEURL
      id: baseurl
      shell: bash
      run: |
        # shellcheck disable=SC2086
        if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.merged }}" != "true" ]]; then
          url="https://deploy-preview-${{ github.event.pull_request.number }}--reearth-web.netlify.app"
          echo "Using Netlify deploy-preview: $url"
        else
          url="${{ env.DEV_BASEURL }}"
          echo "Using Dev URL: $url"
        fi
        echo "url=$url" >>"$GITHUB_OUTPUT"

    #--------------------------------------------------------------
    #  Wait only when we are on an **open** PR preview
    #--------------------------------------------------------------
    - name: Wait for Netlify deploy-preview
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == 'false'
      shell: bash
      run: |
        set -e
        url='${{ steps.baseurl.outputs.url }}'
        echo "Polling $url until it returns 200…"
        for i in {1..60}; do
          status=$(curl -s -o /dev/null -w "%{http_code}" "$url")
          [[ "$status" == "200" ]] && { echo "Preview is live!"; exit 0; }
          echo "Still waiting (HTTP $status) – retry $i/60"
          sleep 10
        done
        echo "::error ::Timed-out waiting for Netlify deploy-preview"
        exit 1

    - name: Install dependencies & Playwright
      run: |
        npm ci
        npx playwright install --with-deps

    - name: Run Playwright tests
      env:
        REEARTH_E2E_EMAIL:    ${{ secrets.REEARTH_E2E_EMAIL }}
        REEARTH_E2E_PASSWORD: ${{ secrets.REEARTH_E2E_PASSWORD }}
        REEARTH_WEB_E2E_BASEURL: ${{ steps.baseurl.outputs.url }}
      run: npx playwright test --config=playwright.config.ts

    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: web/e2e/playwright-tests/test-report
        retention-days: 30
