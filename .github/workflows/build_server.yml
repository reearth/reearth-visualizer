name: build-server
on:
  workflow_call:
    inputs:
      sha_short:
        type: string
        required: true
      new_tag:
        type: string
        required: true
      new_tag_short:
        type: string
        required: true
      name:
        type: string
        required: true
      sha:
        type: string
        required: true

jobs:
  build-docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    if: ${{ inputs.name != '' || inputs.new_tag != '' }}
    env:
      IMAGE_NAME: reearth/reearth-visualizer-api
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1.12.0
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Login to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get options
        id: options
        env:
          TAG: ${{ inputs.new_tag_short }}
          NAME: ${{ inputs.name }}
          SHA: ${{ inputs.sha_short }}
        run: |
          if [[ -n $TAG ]]; then
            PLATFORMS=linux/amd64,linux/arm64
            VERSION=$TAG
            TAGS=$IMAGE_NAME:$TAG
            if [[ ! $TAG =~ '-' ]]; then
              TAGS+=,${IMAGE_NAME}:${TAG%.*}
              TAGS+=,${IMAGE_NAME}:${TAG%%.*}
              TAGS+=,${IMAGE_NAME}:latest
            fi
          else
            PLATFORMS=linux/amd64
            VERSION=$SHA
            TAGS=$IMAGE_NAME:$NAME
          fi
          echo "platforms=$PLATFORMS" >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tags=$TAGS" >> "$GITHUB_OUTPUT"
      # TODO: Remove this step when we discontinue embedding front-end in the server
      - name: Fetch reearth-web release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ inputs.name || inputs.new_tag }}
          file: reearth-web_${{ inputs.name || inputs.new_tag }}.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          target: server/reearth-web.tar.gz
      # TODO: Remove this step when we discontinue embedding front-end in the server
      - name: Extract reearth/web
        run: tar -xvf reearth-web.tar.gz; mv reearth-web web; ls
      - name: Build and push docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: server
          platforms: ${{ steps.options.outputs.platforms }}
          push: true
          build-args: VERSION=${{ steps.options.outputs.version }}
          tags: ${{ steps.options.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
