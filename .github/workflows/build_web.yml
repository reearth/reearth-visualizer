name: build-web
on:
  workflow_call:
    inputs:
      sha_short:
        type: string
        required: true
      new_tag:
        type: string
        required: true
      new_tag_short:
        type: string
        required: true
      name:
        type: string
        required: true
      sha:
        type: string
        required: true

jobs:
  build-web-docker:
    runs-on: ubuntu-latest
    if: ${{ inputs.name != '' || inputs.new_tag != '' }}
    env:
      IMAGE_NAME: reearth/reearth-visualizer-web
    defaults:
      run:
        working-directory: web
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get options
        id: options
        env:
          TAG: ${{ inputs.new_tag_short && inputs.new_tag_short != '' && inputs.new_tag_short || '' }}
          NAME: ${{ inputs.name }}
          SHA: ${{ inputs.sha_short }}
        run: |
          if [[ -n $TAG ]]; then
            PLATFORMS=linux/amd64,linux/arm64
            VERSION=$TAG
            TAGS=$IMAGE_NAME:$TAG
            if [[ ! $TAG =~ '-' ]]; then
              TAGS+=,${IMAGE_NAME}:${TAG%.*}
              TAGS+=,${IMAGE_NAME}:${TAG%%.*}
              TAGS+=,${IMAGE_NAME}:latest
            fi
          else
            PLATFORMS=linux/amd64
            VERSION=$SHA
            TAGS=$IMAGE_NAME:$NAME
          fi
          echo "::set-output name=platforms::$PLATFORMS"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tags::$TAGS"
      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: web
          platforms: ${{ steps.options.outputs.platforms }}
          push: true
          build-args: VERSION=${{ steps.options.outputs.version }}
          tags: ${{ steps.options.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    if: inputs.name
    env:
      NODE_OPTIONS: "--max-old-space-size=8192"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.3.1 --activate
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Pack
        run: mv dist reearth-web && tar -zcvf reearth-web.tar.gz reearth-web
      - uses: actions/upload-artifact@v4
        with:
          name: reearth-web
          path: web/reearth-web.tar.gz

  release-nightly-rc:
    runs-on: ubuntu-latest
    needs: [build-web]
    if: ${{ inputs.name != '' }}
    env:
      ARTIFACT: reearth-web_${{ inputs.name }}.tar.gz
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - uses: actions/download-artifact@v4
        with:
          name: reearth-web
      - name: Rename artifact
        run: mv reearth-web.tar.gz $ARTIFACT
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ env.ARTIFACT }}
          artifactContentType: application/gzip
          commit: ${{ inputs.sha }}
          name: ${{ inputs.name }}
          tag: ${{ inputs.name }}
          body: ${{ inputs.sha }}
          prerelease: true

  release:
    runs-on: ubuntu-latest
    if: ${{ inputs.new_tag != '' }}
    env:
      ARTIFACT: reearth-web_${{ inputs.new_tag }}.tar.gz
    steps:
      - name: Fetch reearth-web release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/rc
          file: reearth-web_rc.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Rename artifact
        run: mv reearth-web_rc.tar.gz $ARTIFACT
      - name: Download latest changelog
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: release.yml
          name: changelog-${{ inputs.new_tag }}
      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ env.ARTIFACT }}
          artifactContentType: application/gzip
          commit: ${{ inputs.sha }}
          name: ${{ inputs.new_tag }}
          tag: ${{ inputs.new_tag }}
          bodyFile: CHANGELOG_latest.md
