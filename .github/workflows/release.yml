name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: 'Next version (Use "custom" for specific versions like beta)(NOTE: Switch the branch to "release"!)'
        type: choice
        default: minor
        options:
          - patch
          - minor
          - major
          - custom
      custom_version:
        required: false
        description: 'Custom version (e.g., 1.0.0-beta.1.0) - Only used when version is set to "custom"'
        type: string
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
      - name: Set up git config
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global pull.rebase false
      - id: changelog
        name: Generate CHANGELOG
        uses: reearth/changelog-action@main
        with:
          version: ${{ github.event.inputs.version == 'custom' && github.event.inputs.custom_version || github.event.inputs.version }}
          repo: ${{ github.repository }}
          latest: CHANGELOG_latest.md
      - name: Upload latest CHANGELOG
        uses: actions/upload-artifact@v3
        with:
          name: changelog-${{ steps.changelog.outputs.version }}
          path: CHANGELOG_latest.md
      - name: Commit & push to release
        env:
          TAG: v${{ github.event.inputs.version == 'custom' && github.event.inputs.custom_version || steps.changelog.outputs.version }}
        run: |
          rm CHANGELOG_latest.md
          git add CHANGELOG.md
          git commit -am "$TAG"
          git tag $TAG
          git push --atomic origin release $TAG
      - name: Commit & push to main
        run: git switch main && git cherry-pick release && git push
