name: Upload Cesium Ion token
on:
  workflow_call:
    secrets:
      credentials_json:
        required: true
      secret_name:
        required: true
env:
  APP_NAME: reearth-visualizer-web
  REGION: us-central1
jobs:
  upload:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.credentials_json }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Get Cesium Ion token
        id: ion_token
        run: |
          cesium_ion_token_txt_path="/tmp/cesium_ion_token.txt"
          curl https://raw.githubusercontent.com/CesiumGS/cesium/main/packages/engine/Source/Core/Ion.js > /tmp/Ion.js
          cat /tmp/Ion.js | node -e "console.log(require('fs').readFileSync(process.stdin.fd).toString().match(/const defaultAccessToken =(\n| ).*\"(.*)\";/)[2])" | tr -d '\n' >> ${cesium_ion_token_txt_path}
          token_length=$(cat ${cesium_ion_token_txt_path} | wc -c)
          if [ $token_length -ne 177 ]; then
            echo "Token length is invalid. TokenLength: ${token_length}"
            exit 1
          fi
          echo "token=$(<${cesium_ion_token_txt_path})" >> $GITHUB_OUTPUT
      - name: Update Secret Manager secret
        run: |
          echo -n "${{ steps.ion_token.outputs.token }}" | gcloud secrets versions add ${{ secrets.secret_name }} \
            --data-file=-
      - name: Update Cloud Run
        run: |
          gcloud run services update $APP_NAME \
            --update-secrets REEARTH_WEB_CESIUM_ION_ACCESS_TOKEN=${{ secrets.CESIUM_ION_TOKEN_SECRET_NAME }}:latest \
            --region $REGION
      - name: Update Cloud Run traffic
        run: |
          gcloud run services update-traffic $APP_NAME \
            --to-latest \
            --region $REGION
